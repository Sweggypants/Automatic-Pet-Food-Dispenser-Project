

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Aug 17 09:02:24 2022

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  001B16                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for displayAlarmOff@F4503
    45  001B16  57                 	db	87
    46  001B17  61                 	db	97
    47  001B18  69                 	db	105
    48  001B19  74                 	db	116
    49  001B1A  69                 	db	105
    50  001B1B  6E                 	db	110
    51  001B1C  67                 	db	103
    52  001B1D  20                 	db	32
    53  001B1E  20                 	db	32
    54  001B1F  20                 	db	32
    55  001B20  20                 	db	32
    56  001B21  20                 	db	32
    57  001B22  20                 	db	32
    58  001B23  20                 	db	32
    59  001B24  20                 	db	32
    60  001B25  20                 	db	32
    61  001B26  20                 	db	32
    62  001B27  20                 	db	32
    63  001B28  00                 	db	0
    64                           
    65                           	psect	idataBANK0
    66  00193E                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for SetupTime@F4482
    70  00193E  53                 	db	83
    71  00193F  65                 	db	101
    72  001940  74                 	db	116
    73  001941  20                 	db	32
    74  001942  74                 	db	116
    75  001943  69                 	db	105
    76  001944  6D                 	db	109
    77  001945  65                 	db	101
    78  001946  20                 	db	32
    79  001947  48                 	db	72
    80  001948  48                 	db	72
    81  001949  2F                 	db	47
    82  00194A  4D                 	db	77
    83  00194B  4D                 	db	77
    84  00194C  2F                 	db	47
    85  00194D  53                 	db	83
    86  00194E  53                 	db	83
    87  00194F  20                 	db	32
    88  001950  20                 	db	32
    89  001951  20                 	db	32
    90  001952  20                 	db	32
    91  001953  20                 	db	32
    92  001954  20                 	db	32
    93  001955  20                 	db	32
    94  001956  20                 	db	32
    95  001957  20                 	db	32
    96  001958  20                 	db	32
    97  001959  20                 	db	32
    98  00195A  3A                 	db	58
    99  00195B  20                 	db	32
   100  00195C  20                 	db	32
   101  00195D  20                 	db	32
   102  00195E  20                 	db	32
   103  00195F  00                 	db	0
   104                           
   105                           ;initializer for SetupAlarmTime@F4492
   106  001960  53                 	db	83
   107  001961  65                 	db	101
   108  001962  74                 	db	116
   109  001963  20                 	db	32
   110  001964  74                 	db	116
   111  001965  69                 	db	105
   112  001966  6D                 	db	109
   113  001967  65                 	db	101
   114  001968  20                 	db	32
   115  001969  74                 	db	116
   116  00196A  6F                 	db	111
   117  00196B  20                 	db	32
   118  00196C  64                 	db	100
   119  00196D  69                 	db	105
   120  00196E  73                 	db	115
   121  00196F  70                 	db	112
   122  001970  65                 	db	101
   123  001971  6E                 	db	110
   124  001972  73                 	db	115
   125  001973  65                 	db	101
   126  001974  20                 	db	32
   127  001975  20                 	db	32
   128  001976  20                 	db	32
   129  001977  20                 	db	32
   130  001978  20                 	db	32
   131  001979  20                 	db	32
   132  00197A  20                 	db	32
   133  00197B  20                 	db	32
   134  00197C  20                 	db	32
   135  00197D  3A                 	db	58
   136  00197E  00                 	db	0
   137                           
   138                           ;initializer for displayAlarmOn@F4498
   139  00197F  44                 	db	68
   140  001980  69                 	db	105
   141  001981  73                 	db	115
   142  001982  70                 	db	112
   143  001983  65                 	db	101
   144  001984  6E                 	db	110
   145  001985  73                 	db	115
   146  001986  69                 	db	105
   147  001987  6E                 	db	110
   148  001988  67                 	db	103
   149  001989  20                 	db	32
   150  00198A  20                 	db	32
   151  00198B  20                 	db	32
   152  00198C  20                 	db	32
   153  00198D  20                 	db	32
   154  00198E  20                 	db	32
   155  00198F  20                 	db	32
   156  001990  20                 	db	32
   157  001991  20                 	db	32
   158  001992  00                 	db	0
   159                           
   160                           	psect	smallconst
   161  00101A                     __psmallconst:
   162                           	opt stack 0
   163  00101A  00                 	db	0
   164  00101B                     getkey@F4444:
   165                           	opt stack 0
   166  00101B  31                 	db	49
   167  00101C  32                 	db	50
   168  00101D  33                 	db	51
   169  00101E  46                 	db	70
   170  00101F  34                 	db	52
   171  001020  35                 	db	53
   172  001021  36                 	db	54
   173  001022  45                 	db	69
   174  001023  37                 	db	55
   175  001024  38                 	db	56
   176  001025  39                 	db	57
   177  001026  44                 	db	68
   178  001027  41                 	db	65
   179  001028  30                 	db	48
   180  001029  42                 	db	66
   181  00102A  43                 	db	67
   182  00102B  20                 	db	32
   183  00102C  00                 	db	0
   184  00102D                     __end_ofgetkey@F4444:
   185                           	opt stack 0
   186  0000                     _ADCON1	set	4033
   187  0000                     _CMCON	set	4020
   188  0000                     _INTCON2	set	4081
   189  0000                     _INTCONbits	set	4082
   190  0000                     _PORTAbits	set	3968
   191  0000                     _PORTB	set	3969
   192  0000                     _PORTBbits	set	3969
   193  0000                     _PORTD	set	3971
   194  0000                     _PORTDbits	set	3971
   195  0000                     _RCONbits	set	4048
   196  0000                     _T0CON	set	4053
   197  0000                     _T0CONbits	set	4053
   198  0000                     _TMR0H	set	4055
   199  0000                     _TMR0L	set	4054
   200  0000                     _TRISAbits	set	3986
   201  0000                     _TRISD	set	3989
   202  00102D  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207  0018E6                     __pcinit:
   208                           	opt stack 0
   209  0018E6                     start_initialization:
   210                           	opt stack 0
   211  0018E6                     __initialization:
   212                           	opt stack 0
   213                           
   214                           ; Clear objects allocated to COMRAM (5 bytes)
   215  0018E6  6A3E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   216  0018E8  6A3D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   217  0018EA  6A3C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   218  0018EC  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   219  0018EE  6A3A               	clrf	__pbssCOMRAM& (0+255),c
   220                           
   221                           ; Initialize objects allocated to BANK0 (85 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223  0018F0  0E3E               	movlw	low __pidataBANK0
   224  0018F2  6EF6               	movwf	tblptrl,c
   225  0018F4  0E19               	movlw	high __pidataBANK0
   226  0018F6  6EF7               	movwf	tblptrh,c
   227  0018F8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228  0018FA  6EF8               	movwf	tblptru,c
   229  0018FC  EE00  F060         	lfsr	0,__pdataBANK0
   230  001900  EE10 F055          	lfsr	1,85
   231  001904                     copy_data0:
   232  001904  0009               	tblrd		*+
   233  001906  CFF5 FFEE          	movff	tablat,postinc0
   234  00190A  50E5               	movf	postdec1,w,c
   235  00190C  50E1               	movf	fsr1l,w,c
   236  00190E  E1FA               	bnz	copy_data0
   237                           
   238                           ; Initialize objects allocated to COMRAM (19 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240  001910  0E16               	movlw	low __pidataCOMRAM
   241  001912  6EF6               	movwf	tblptrl,c
   242  001914  0E1B               	movlw	high __pidataCOMRAM
   243  001916  6EF7               	movwf	tblptrh,c
   244  001918  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245  00191A  6EF8               	movwf	tblptru,c
   246  00191C  EE00  F027         	lfsr	0,__pdataCOMRAM
   247  001920  EE10 F013          	lfsr	1,19
   248  001924                     copy_data1:
   249  001924  0009               	tblrd		*+
   250  001926  CFF5 FFEE          	movff	tablat,postinc0
   251  00192A  50E5               	movf	postdec1,w,c
   252  00192C  50E1               	movf	fsr1l,w,c
   253  00192E  E1FA               	bnz	copy_data1
   254  001930                     end_of_initialization:
   255                           	opt stack 0
   256  001930                     __end_of__initialization:
   257                           	opt stack 0
   258  001930  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   259  001932  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   260  001934  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261  001936  6EF8               	movwf	tblptru,c
   262  001938  0100               	movlb	0
   263  00193A  EF3F  F00C         	goto	_main	;jump to C main() function
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	bssCOMRAM
   273  00003A                     __pbssCOMRAM:
   274                           	opt stack 0
   275  00003A                     _hour:
   276                           	opt stack 0
   277  00003A                     	ds	1
   278  00003B                     _hourA:
   279                           	opt stack 0
   280  00003B                     	ds	1
   281  00003C                     _minute:
   282                           	opt stack 0
   283  00003C                     	ds	1
   284  00003D                     _minuteA:
   285                           	opt stack 0
   286  00003D                     	ds	1
   287  00003E                     _second:
   288                           	opt stack 0
   289  00003E                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	dataCOMRAM
   299  000027                     __pdataCOMRAM:
   300                           	opt stack 0
   301  000027                     displayAlarmOff@F4503:
   302                           	opt stack 0
   303  000027                     	ds	19
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	dataBANK0
   313  000060                     __pdataBANK0:
   314                           	opt stack 0
   315  000060                     SetupTime@F4482:
   316                           	opt stack 0
   317  000060                     	ds	34
   318  000082                     SetupAlarmTime@F4492:
   319                           	opt stack 0
   320  000082                     	ds	31
   321  0000A1                     displayAlarmOn@F4498:
   322                           	opt stack 0
   323  0000A1                     	ds	20
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackBANK0
   333  0000B5                     __pcstackBANK0:
   334                           	opt stack 0
   335  0000B5                     getkey@lookup:
   336                           	opt stack 0
   337  0000B5                     displayAlarmOff@Message:
   338                           	opt stack 0
   339  0000B5                     displayAlarmOn@Message:
   340                           	opt stack 0
   341                           
   342                           ; 20 bytes @ 0x0
   343  0000B5                     	ds	18
   344  0000C7                     getkey@keycode:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x12
   348  0000C7                     	ds	1
   349  0000C8                     displayAlarmOff@outchar:
   350                           	opt stack 0
   351  0000C8                     SetupAlarmTime@Message:
   352                           	opt stack 0
   353  0000C8                     SetupTime@Message:
   354                           	opt stack 0
   355                           
   356                           ; 34 bytes @ 0x13
   357  0000C8                     	ds	1
   358  0000C9                     displayAlarmOn@outchar:
   359                           	opt stack 0
   360  0000C9                     displayAlarmOff@msgindex:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x14
   364  0000C9                     	ds	1
   365  0000CA                     displayAlarmOn@msgindex:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x15
   369  0000CA                     	ds	29
   370  0000E7                     SetupAlarmTime@outchar:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x32
   374  0000E7                     	ds	1
   375  0000E8                     SetupAlarmTime@hour10:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x33
   379  0000E8                     	ds	1
   380  0000E9                     SetupAlarmTime@hour1:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x34
   384  0000E9                     	ds	1
   385  0000EA                     SetupTime@outchar:
   386                           	opt stack 0
   387  0000EA                     SetupAlarmTime@minute10:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x35
   391  0000EA                     	ds	1
   392  0000EB                     SetupTime@hour10:
   393                           	opt stack 0
   394  0000EB                     SetupAlarmTime@minute1:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x36
   398  0000EB                     	ds	1
   399  0000EC                     SetupTime@hour1:
   400                           	opt stack 0
   401  0000EC                     SetupAlarmTime@msgindex:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x37
   405  0000EC                     	ds	1
   406  0000ED                     SetupTime@minute10:
   407                           	opt stack 0
   408  0000ED                     SetupAlarmTime@ctemp:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x38
   412  0000ED                     	ds	1
   413  0000EE                     SetupTime@minute1:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x39
   417  0000EE                     	ds	1
   418  0000EF                     SetupTime@second10:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x3A
   422  0000EF                     	ds	1
   423  0000F0                     SetupTime@second1:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x3B
   427  0000F0                     	ds	1
   428  0000F1                     SetupTime@msgindex:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x3C
   432  0000F1                     	ds	1
   433  0000F2                     SetupTime@ctemp:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x3D
   437  0000F2                     	ds	1
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	cstackCOMRAM
   447  000001                     __pcstackCOMRAM:
   448                           	opt stack 0
   449  000001                     ??i2_lcd_strobe:
   450  000001                     ?___awdiv:
   451                           	opt stack 0
   452  000001                     int_2_char@int1:
   453                           	opt stack 0
   454  000001                     ___awdiv@dividend:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x0
   458  000001                     	ds	1
   459  000002                     ??i2_lcd_write_cmd:
   460  000002                     ??i2_lcd_write_data:
   461  000002                     int_2_char@char1:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x1
   465  000002                     	ds	1
   466  000003                     i2lcd_write_cmd@cmd:
   467                           	opt stack 0
   468  000003                     i2lcd_write_data@data:
   469                           	opt stack 0
   470  000003                     ___awdiv@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x2
   474  000003                     	ds	1
   475  000004                     i2lcd_write_cmd@temp2:
   476                           	opt stack 0
   477  000004                     i2lcd_write_data@temp1:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x3
   481  000004                     	ds	1
   482  000005                     ___awdiv@counter:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x4
   486  000005                     	ds	1
   487  000006                     ___awdiv@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x5
   491  000006                     	ds	1
   492  000007                     ___awdiv@quotient:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x6
   496  000007                     	ds	2
   497  000009                     ??_ISR_Timer0_Int:
   498                           
   499                           ; 0 bytes @ 0x8
   500  000009                     	ds	14
   501  000017                     ISR_Timer0_Int@hour1:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x16
   505  000017                     	ds	1
   506  000018                     ISR_Timer0_Int@minute1:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x17
   510  000018                     	ds	1
   511  000019                     ISR_Timer0_Int@second1:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x18
   515  000019                     	ds	1
   516  00001A                     ISR_Timer0_Int@hour10:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x19
   520  00001A                     	ds	1
   521  00001B                     ISR_Timer0_Int@minute10:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x1A
   525  00001B                     	ds	1
   526  00001C                     ISR_Timer0_Int@second10:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x1B
   530  00001C                     	ds	1
   531  00001D                     ??_lcd_strobe:
   532  00001D                     char_2_int@char1:
   533                           	opt stack 0
   534  00001D                     delay_ms@i:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1C
   538  00001D                     	ds	1
   539  00001E                     ??_lcd_write_cmd:
   540  00001E                     ??_lcd_write_data:
   541  00001E                     char_2_int@int1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x1D
   545  00001E                     	ds	1
   546  00001F                     ??_delay_ms:
   547  00001F                     lcd_write_cmd@cmd:
   548                           	opt stack 0
   549  00001F                     lcd_write_data@data:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x1E
   553  00001F                     	ds	1
   554  000020                     lcd_write_cmd@temp2:
   555                           	opt stack 0
   556  000020                     lcd_write_data@temp1:
   557                           	opt stack 0
   558  000020                     delay_ms@j:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x1F
   562  000020                     	ds	1
   563  000021                     ??_lcd_init:
   564  000021                     
   565                           ; 0 bytes @ 0x20
   566  000021                     	ds	1
   567  000022                     turnServoMotor@count:
   568                           	opt stack 0
   569  000022                     lcd_init@i:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x21
   573  000022                     	ds	2
   574  000024                     main@servoMotor:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x23
   578  000024                     	ds	1
   579  000025                     main@Buzzer:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x24
   583  000025                     	ds	1
   584  000026                     main@displayUpdated:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x25
   588  000026                     	ds	1
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           postdec1	equ	0xFE5
   595                           fsr1l	equ	0xFE1
   596                           
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 302 in file "RealTimeClockAns.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  displayUpdat    1   37[COMRAM] unsigned char 
   607 ;;  Buzzer          1   36[COMRAM] unsigned char 
   608 ;;  servoMotor      1   35[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;		None               void
   611 ;; Registers used:
   612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   618 ;;      Params:         0       0       0       0       0       0       0       0       0
   619 ;;      Locals:         3       0       0       0       0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0
   621 ;;      Totals:         3       0       0       0       0       0       0       0       0
   622 ;;Total ram usage:        3 bytes
   623 ;; Hardware stack levels required when called:    6
   624 ;; This function calls:
   625 ;;		_SetupAlarmTime
   626 ;;		_SetupTime
   627 ;;		_SetupTimerInterruptRegisters
   628 ;;		_activateBuzzer
   629 ;;		_displayAlarmOff
   630 ;;		_displayAlarmOn
   631 ;;		_lcd_init
   632 ;;		_turnServoMotor
   633 ;; This function is called by:
   634 ;;		Startup code after reset
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text0
   639  00187E                     __ptext0:
   640                           	opt stack 0
   641  00187E                     _main:
   642                           	opt stack 25
   643                           
   644                           ;RealTimeClockAns.c: 304: unsigned char displayUpdated;
   645                           ;RealTimeClockAns.c: 305: unsigned char servoMotor;
   646                           ;RealTimeClockAns.c: 306: unsigned char Buzzer;
   647                           ;RealTimeClockAns.c: 309: displayUpdated = 1;
   648                           
   649                           ;incstack = 0
   650  00187E  0E01               	movlw	1
   651  001880  6E26               	movwf	main@displayUpdated,c
   652                           
   653                           ;RealTimeClockAns.c: 312: ADCON1 = 0x0F;
   654  001882  0E0F               	movlw	15
   655  001884  6EC1               	movwf	4033,c	;volatile
   656                           
   657                           ;RealTimeClockAns.c: 313: CMCON = 0x07;
   658  001886  0E07               	movlw	7
   659  001888  6EB4               	movwf	4020,c	;volatile
   660                           
   661                           ;RealTimeClockAns.c: 315: lcd_init();
   662  00188A  EC5D  F00B         	call	_lcd_init	;wreg free
   663                           
   664                           ;RealTimeClockAns.c: 317: SetupTime();
   665  00188E  ECD9  F008         	call	_SetupTime	;wreg free
   666                           
   667                           ;RealTimeClockAns.c: 318: SetupAlarmTime();
   668  001892  EC76  F009         	call	_SetupAlarmTime	;wreg free
   669                           
   670                           ;RealTimeClockAns.c: 319: SetupTimerInterruptRegisters();
   671  001896  EC73  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   672  00189A                     l187:
   673                           
   674                           ;RealTimeClockAns.c: 322: {
   675                           ;RealTimeClockAns.c: 323: if(hour==hourA && minute==minuteA)
   676  00189A  503B               	movf	_hourA,w,c
   677  00189C  183A               	xorwf	_hour,w,c
   678  00189E  A4D8               	btfss	status,2,c
   679  0018A0  D01A               	goto	l2168
   680  0018A2  503D               	movf	_minuteA,w,c
   681  0018A4  183C               	xorwf	_minute,w,c
   682  0018A6  A4D8               	btfss	status,2,c
   683  0018A8  D016               	goto	l2168
   684                           
   685                           ;RealTimeClockAns.c: 324: {
   686                           ;RealTimeClockAns.c: 325: if(displayUpdated == 2)
   687  0018AA  0E02               	movlw	2
   688  0018AC  1826               	xorwf	main@displayUpdated,w,c
   689  0018AE  A4D8               	btfss	status,2,c
   690  0018B0  D004               	goto	l2156
   691                           
   692                           ;RealTimeClockAns.c: 326: {
   693                           ;RealTimeClockAns.c: 327: displayAlarmOn();
   694  0018B2  ECCA  F00C         	call	_displayAlarmOn	;wreg free
   695                           
   696                           ;RealTimeClockAns.c: 328: Buzzer = 1;
   697  0018B6  0E01               	movlw	1
   698  0018B8  6E25               	movwf	main@Buzzer,c
   699  0018BA                     l2156:
   700                           
   701                           ;RealTimeClockAns.c: 329: }
   702                           ;RealTimeClockAns.c: 330: if(Buzzer == 1)
   703  0018BA  0425               	decf	main@Buzzer,w,c
   704  0018BC  A4D8               	btfss	status,2,c
   705  0018BE  D004               	goto	l2162
   706                           
   707                           ;RealTimeClockAns.c: 331: {
   708                           ;RealTimeClockAns.c: 332: activateBuzzer();
   709  0018C0  EC81  F00D         	call	_activateBuzzer	;wreg free
   710                           
   711                           ;RealTimeClockAns.c: 333: servoMotor = 1;
   712  0018C4  0E01               	movlw	1
   713  0018C6  6E24               	movwf	main@servoMotor,c
   714  0018C8                     l2162:
   715                           
   716                           ;RealTimeClockAns.c: 334: }
   717                           ;RealTimeClockAns.c: 336: if(servoMotor == 1)
   718  0018C8  0424               	decf	main@servoMotor,w,c
   719  0018CA  A4D8               	btfss	status,2,c
   720  0018CC  D7E6               	goto	l187
   721                           
   722                           ;RealTimeClockAns.c: 337: {
   723                           ;RealTimeClockAns.c: 338: turnServoMotor();
   724  0018CE  ECF0  F009         	call	_turnServoMotor	;wreg free
   725                           
   726                           ;RealTimeClockAns.c: 339: displayUpdated = 1;
   727  0018D2  0E01               	movlw	1
   728  0018D4  D006               	goto	L1
   729  0018D6                     l2168:
   730                           
   731                           ;RealTimeClockAns.c: 343: else
   732                           ;RealTimeClockAns.c: 344: {
   733                           ;RealTimeClockAns.c: 345: if(displayUpdated == 1)
   734  0018D6  0426               	decf	main@displayUpdated,w,c
   735  0018D8  A4D8               	btfss	status,2,c
   736  0018DA  D7DF               	goto	l187
   737                           
   738                           ;RealTimeClockAns.c: 346: {
   739                           ;RealTimeClockAns.c: 347: displayAlarmOff();
   740  0018DC  ECF1  F00C         	call	_displayAlarmOff	;wreg free
   741                           
   742                           ;RealTimeClockAns.c: 348: displayUpdated = 2;
   743  0018E0  0E02               	movlw	2
   744  0018E2                     L1:
   745  0018E2  6E26               	movwf	main@displayUpdated,c
   746  0018E4  D7DA               	goto	l187
   747  0018E6                     __end_of_main:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           postdec1	equ	0xFE5
   755                           fsr1l	equ	0xFE1
   756                           status	equ	0xFD8
   757                           
   758 ;; *************** function _turnServoMotor *****************
   759 ;; Defined at:
   760 ;;		line 258 in file "RealTimeClockAns.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  count           1   33[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;		None               void
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0
   777 ;;      Totals:         1       0       0       0       0       0       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    4
   781 ;; This function calls:
   782 ;;		_delay_ms
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789  0013E0                     __ptext1:
   790                           	opt stack 0
   791  0013E0                     _turnServoMotor:
   792                           	opt stack 26
   793                           
   794                           ;RealTimeClockAns.c: 260: unsigned char count;
   795                           ;RealTimeClockAns.c: 261: TRISAbits.TRISA0 = 0;
   796                           
   797                           ;incstack = 0
   798  0013E0  9092               	bcf	3986,0,c	;volatile
   799                           
   800                           ;RealTimeClockAns.c: 263: delay_ms(1000);
   801  0013E2  0E03               	movlw	3
   802  0013E4  6E1E               	movwf	delay_ms@i+1,c
   803  0013E6  0EE8               	movlw	232
   804  0013E8  6E1D               	movwf	delay_ms@i,c
   805  0013EA  EC37  F00D         	call	_delay_ms	;wreg free
   806                           
   807                           ;RealTimeClockAns.c: 265: for (count = 0; count < 13; count++)
   808  0013EE  0E00               	movlw	0
   809  0013F0  6E22               	movwf	turnServoMotor@count,c
   810  0013F2                     l1654:
   811  0013F2  0E0C               	movlw	12
   812  0013F4  6422               	cpfsgt	turnServoMotor@count,c
   813  0013F6  D001               	goto	l175
   814  0013F8  D010               	goto	l1666
   815  0013FA                     l175:
   816                           
   817                           ;RealTimeClockAns.c: 266: {
   818                           ;RealTimeClockAns.c: 267: PORTAbits.RA0 = 1;
   819  0013FA  8080               	bsf	3968,0,c	;volatile
   820                           
   821                           ;RealTimeClockAns.c: 268: delay_ms(1.5);
   822  0013FC  0E00               	movlw	0
   823  0013FE  6E1E               	movwf	delay_ms@i+1,c
   824  001400  0E01               	movlw	1
   825  001402  6E1D               	movwf	delay_ms@i,c
   826  001404  EC37  F00D         	call	_delay_ms	;wreg free
   827                           
   828                           ;RealTimeClockAns.c: 269: PORTAbits.RA0 = 0;
   829  001408  9080               	bcf	3968,0,c	;volatile
   830                           
   831                           ;RealTimeClockAns.c: 270: delay_ms(18.5);
   832  00140A  0E00               	movlw	0
   833  00140C  6E1E               	movwf	delay_ms@i+1,c
   834  00140E  0E12               	movlw	18
   835  001410  6E1D               	movwf	delay_ms@i,c
   836  001412  EC37  F00D         	call	_delay_ms	;wreg free
   837  001416  2A22               	incf	turnServoMotor@count,f,c
   838  001418  D7EC               	goto	l1654
   839  00141A                     l1666:
   840                           
   841                           ;RealTimeClockAns.c: 271: }
   842                           ;RealTimeClockAns.c: 272: delay_ms(1000);
   843  00141A  0E03               	movlw	3
   844  00141C  6E1E               	movwf	delay_ms@i+1,c
   845  00141E  0EE8               	movlw	232
   846  001420  6E1D               	movwf	delay_ms@i,c
   847  001422  EC37  F00D         	call	_delay_ms	;wreg free
   848                           
   849                           ;RealTimeClockAns.c: 273: for (count = 0; count < 13; count++)
   850  001426  0E00               	movlw	0
   851  001428  6E22               	movwf	turnServoMotor@count,c
   852  00142A                     l1670:
   853  00142A  0E0C               	movlw	12
   854  00142C  6422               	cpfsgt	turnServoMotor@count,c
   855  00142E  D001               	goto	l177
   856  001430  D010               	goto	l1682
   857  001432                     l177:
   858                           
   859                           ;RealTimeClockAns.c: 274: {
   860                           ;RealTimeClockAns.c: 275: PORTAbits.RA0 = 1;
   861  001432  8080               	bsf	3968,0,c	;volatile
   862                           
   863                           ;RealTimeClockAns.c: 276: delay_ms(2.4);
   864  001434  0E00               	movlw	0
   865  001436  6E1E               	movwf	delay_ms@i+1,c
   866  001438  0E02               	movlw	2
   867  00143A  6E1D               	movwf	delay_ms@i,c
   868  00143C  EC37  F00D         	call	_delay_ms	;wreg free
   869                           
   870                           ;RealTimeClockAns.c: 277: PORTAbits.RA0 = 0;
   871  001440  9080               	bcf	3968,0,c	;volatile
   872                           
   873                           ;RealTimeClockAns.c: 278: delay_ms(17.6);
   874  001442  0E00               	movlw	0
   875  001444  6E1E               	movwf	delay_ms@i+1,c
   876  001446  0E11               	movlw	17
   877  001448  6E1D               	movwf	delay_ms@i,c
   878  00144A  EC37  F00D         	call	_delay_ms	;wreg free
   879  00144E  2A22               	incf	turnServoMotor@count,f,c
   880  001450  D7EC               	goto	l1670
   881  001452                     l1682:
   882                           
   883                           ;RealTimeClockAns.c: 279: }
   884                           ;RealTimeClockAns.c: 280: delay_ms(1000);
   885  001452  0E03               	movlw	3
   886  001454  6E1E               	movwf	delay_ms@i+1,c
   887  001456  0EE8               	movlw	232
   888  001458  6E1D               	movwf	delay_ms@i,c
   889  00145A  EC37  F00D         	call	_delay_ms	;wreg free
   890                           
   891                           ;RealTimeClockAns.c: 281: for (count = 0; count < 13; count++)
   892  00145E  0E00               	movlw	0
   893  001460  6E22               	movwf	turnServoMotor@count,c
   894  001462                     l1686:
   895  001462  0E0C               	movlw	12
   896  001464  6422               	cpfsgt	turnServoMotor@count,c
   897  001466  D001               	goto	l179
   898  001468  D010               	goto	l1698
   899  00146A                     l179:
   900                           
   901                           ;RealTimeClockAns.c: 282: {
   902                           ;RealTimeClockAns.c: 283: PORTAbits.RA0 = 1;
   903  00146A  8080               	bsf	3968,0,c	;volatile
   904                           
   905                           ;RealTimeClockAns.c: 284: delay_ms(1.5);
   906  00146C  0E00               	movlw	0
   907  00146E  6E1E               	movwf	delay_ms@i+1,c
   908  001470  0E01               	movlw	1
   909  001472  6E1D               	movwf	delay_ms@i,c
   910  001474  EC37  F00D         	call	_delay_ms	;wreg free
   911                           
   912                           ;RealTimeClockAns.c: 285: PORTAbits.RA0 = 0;
   913  001478  9080               	bcf	3968,0,c	;volatile
   914                           
   915                           ;RealTimeClockAns.c: 286: delay_ms(18.5);
   916  00147A  0E00               	movlw	0
   917  00147C  6E1E               	movwf	delay_ms@i+1,c
   918  00147E  0E12               	movlw	18
   919  001480  6E1D               	movwf	delay_ms@i,c
   920  001482  EC37  F00D         	call	_delay_ms	;wreg free
   921  001486  2A22               	incf	turnServoMotor@count,f,c
   922  001488  D7EC               	goto	l1686
   923  00148A                     l1698:
   924                           
   925                           ;RealTimeClockAns.c: 287: }
   926                           ;RealTimeClockAns.c: 288: delay_ms(20000);
   927  00148A  0E4E               	movlw	78
   928  00148C  6E1E               	movwf	delay_ms@i+1,c
   929  00148E  0E20               	movlw	32
   930  001490  6E1D               	movwf	delay_ms@i,c
   931  001492  EC37  F00D         	call	_delay_ms	;wreg free
   932  001496  0012               	return		;funcret
   933  001498                     __end_of_turnServoMotor:
   934                           	opt stack 0
   935                           tblptru	equ	0xFF8
   936                           tblptrh	equ	0xFF7
   937                           tblptrl	equ	0xFF6
   938                           tablat	equ	0xFF5
   939                           postinc0	equ	0xFEE
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           status	equ	0xFD8
   943                           
   944 ;; *************** function _lcd_init *****************
   945 ;; Defined at:
   946 ;;		line 83 in file "lcd_utilities.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  i               2   33[COMRAM] int 
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         2       0       0       0       0       0       0       0       0
   962 ;;      Temps:          1       0       0       0       0       0       0       0       0
   963 ;;      Totals:         3       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        3 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    5
   967 ;; This function calls:
   968 ;;		_lcd_write_cmd
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text2
   975  0016BA                     __ptext2:
   976                           	opt stack 0
   977  0016BA                     _lcd_init:
   978                           	opt stack 25
   979                           
   980                           ;lcd_utilities.c: 85: int i;
   981                           ;lcd_utilities.c: 86: TRISD = 0x00;
   982                           
   983                           ;incstack = 0
   984  0016BA  0E00               	movlw	0
   985  0016BC  6E95               	movwf	3989,c	;volatile
   986                           
   987                           ;lcd_utilities.c: 87: PORTD = 0x00;
   988  0016BE  0E00               	movlw	0
   989  0016C0  6E83               	movwf	3971,c	;volatile
   990                           
   991                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   992  0016C2  9883               	bcf	3971,4,c	;volatile
   993                           
   994                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   995  0016C4  9C83               	bcf	3971,6,c	;volatile
   996                           
   997                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   998  0016C6  9A83               	bcf	3971,5,c	;volatile
   999                           
  1000                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1001  0016C8  0E00               	movlw	0
  1002  0016CA  6E23               	movwf	lcd_init@i+1,c
  1003  0016CC  0E00               	movlw	0
  1004  0016CE  6E22               	movwf	lcd_init@i,c
  1005  0016D0                     l1996:
  1006  0016D0  BE23               	btfsc	lcd_init@i+1,7,c
  1007  0016D2  D006               	goto	l2000
  1008  0016D4  5023               	movf	lcd_init@i+1,w,c
  1009  0016D6  E10F               	bnz	l2004
  1010  0016D8  0E64               	movlw	100
  1011  0016DA  5C22               	subwf	lcd_init@i,w,c
  1012  0016DC  B0D8               	btfsc	status,0,c
  1013  0016DE  D00B               	goto	l2004
  1014  0016E0                     l2000:
  1015                           
  1016                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1017  0016E0  0E9C               	movlw	156
  1018  0016E2  6E21               	movwf	??_lcd_init& (0+255),c
  1019  0016E4  0ED7               	movlw	215
  1020  0016E6                     u1107:
  1021  0016E6  2EE8               	decfsz	wreg,f,c
  1022  0016E8  D7FE               	goto	u1107
  1023  0016EA  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1024  0016EC  D7FC               	goto	u1107
  1025  0016EE  F000               	nop	
  1026  0016F0  4A22               	infsnz	lcd_init@i,f,c
  1027  0016F2  2A23               	incf	lcd_init@i+1,f,c
  1028  0016F4  D7ED               	goto	l1996
  1029  0016F6                     l2004:
  1030                           
  1031                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1032  0016F6  0E33               	movlw	51
  1033  0016F8  ECCF  F00B         	call	_lcd_write_cmd
  1034                           
  1035                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1036  0016FC  0E32               	movlw	50
  1037  0016FE  ECCF  F00B         	call	_lcd_write_cmd
  1038                           
  1039                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1040  001702  0E28               	movlw	40
  1041  001704  ECCF  F00B         	call	_lcd_write_cmd
  1042                           
  1043                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1044  001708  0E0E               	movlw	14
  1045  00170A  ECCF  F00B         	call	_lcd_write_cmd
  1046                           
  1047                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1048  00170E  0E06               	movlw	6
  1049  001710  ECCF  F00B         	call	_lcd_write_cmd
  1050                           
  1051                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1052  001714  0E01               	movlw	1
  1053  001716  ECCF  F00B         	call	_lcd_write_cmd
  1054                           
  1055                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1056  00171A  0E9C               	movlw	156
  1057  00171C  6E21               	movwf	??_lcd_init& (0+255),c
  1058  00171E  0ED7               	movlw	215
  1059  001720                     u1117:
  1060  001720  2EE8               	decfsz	wreg,f,c
  1061  001722  D7FE               	goto	u1117
  1062  001724  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1063  001726  D7FC               	goto	u1117
  1064  001728  F000               	nop	
  1065  00172A  0012               	return		;funcret
  1066  00172C                     __end_of_lcd_init:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function _displayAlarmOn *****************
  1079 ;; Defined at:
  1080 ;;		line 228 in file "RealTimeClockAns.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  Message        20    0[BANK0 ] unsigned char [20]
  1085 ;;  msgindex        1   21[BANK0 ] unsigned char 
  1086 ;;  outchar         1   20[BANK0 ] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;		None               void
  1089 ;; Registers used:
  1090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1100 ;;Total ram usage:       22 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    5
  1103 ;; This function calls:
  1104 ;;		_lcd_write_cmd
  1105 ;;		_lcd_write_data
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text3
  1112  001994                     __ptext3:
  1113                           	opt stack 0
  1114  001994                     _displayAlarmOn:
  1115                           	opt stack 25
  1116                           
  1117                           ;RealTimeClockAns.c: 230: unsigned char msgindex, outchar;
  1118                           ;RealTimeClockAns.c: 232: char Message[ ] = "Dispensing         ";
  1119                           
  1120                           ;incstack = 0
  1121  001994  EE20  F0A1         	lfsr	2,displayAlarmOn@F4498
  1122  001998  EE10  F0B5         	lfsr	1,displayAlarmOn@Message
  1123  00199C  0E13               	movlw	19
  1124  00199E                     u981:
  1125  00199E  CFDB FFE3          	movff	plusw2,plusw1
  1126  0019A2  06E8               	decf	wreg,f,c
  1127  0019A4  E2FC               	bc	u981
  1128                           
  1129                           ;RealTimeClockAns.c: 234: lcd_write_cmd(0xC0);
  1130  0019A6  0EC0               	movlw	192
  1131  0019A8  ECCF  F00B         	call	_lcd_write_cmd
  1132                           
  1133                           ;RealTimeClockAns.c: 235: for (msgindex = 0; msgindex < 20; msgindex++)
  1134  0019AC  0E00               	movlw	0
  1135  0019AE  0100               	movlb	0	; () banked
  1136  0019B0  6FCA               	movwf	displayAlarmOn@msgindex& (0+255),b
  1137  0019B2                     l2108:
  1138                           
  1139                           ; BSR set to: 0
  1140  0019B2  0E13               	movlw	19
  1141  0019B4  0100               	movlb	0	; () banked
  1142  0019B6  65CA               	cpfsgt	displayAlarmOn@msgindex& (0+255),b
  1143  0019B8  D001               	goto	l2112
  1144  0019BA  0012               	return	
  1145  0019BC                     l2112:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;RealTimeClockAns.c: 236: {
  1149                           ;RealTimeClockAns.c: 237: outchar = Message[msgindex];
  1150  0019BC  0100               	movlb	0	; () banked
  1151  0019BE  51CA               	movf	displayAlarmOn@msgindex& (0+255),w,b
  1152  0019C0  0D01               	mullw	1
  1153  0019C2  0EB5               	movlw	low displayAlarmOn@Message
  1154  0019C4  24F3               	addwf	prodl,w,c
  1155  0019C6  6ED9               	movwf	fsr2l,c
  1156  0019C8  0E00               	movlw	high displayAlarmOn@Message
  1157  0019CA  20F4               	addwfc	prodh,w,c
  1158  0019CC  6EDA               	movwf	fsr2h,c
  1159  0019CE  50DF               	movf	indf2,w,c
  1160  0019D0  0100               	movlb	0	; () banked
  1161  0019D2  6FC9               	movwf	displayAlarmOn@outchar& (0+255),b
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;RealTimeClockAns.c: 238: lcd_write_data(outchar);
  1165  0019D4  0100               	movlb	0	; () banked
  1166  0019D6  51C9               	movf	displayAlarmOn@outchar& (0+255),w,b
  1167  0019D8  EC4C  F00A         	call	_lcd_write_data
  1168  0019DC  0100               	movlb	0	; () banked
  1169  0019DE  2BCA               	incf	displayAlarmOn@msgindex& (0+255),f,b
  1170  0019E0  D7E8               	goto	l2108
  1171  0019E2                     __end_of_displayAlarmOn:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           prodh	equ	0xFF4
  1178                           prodl	equ	0xFF3
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec1	equ	0xFE5
  1182                           plusw1	equ	0xFE3
  1183                           fsr1l	equ	0xFE1
  1184                           indf2	equ	0xFDF
  1185                           plusw2	equ	0xFDB
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _displayAlarmOff *****************
  1191 ;; Defined at:
  1192 ;;		line 245 in file "RealTimeClockAns.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  Message        19    0[BANK0 ] unsigned char [19]
  1197 ;;  msgindex        1   20[BANK0 ] unsigned char 
  1198 ;;  outchar         1   19[BANK0 ] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;		None               void
  1201 ;; Registers used:
  1202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1208 ;;      Params:         0       0       0       0       0       0       0       0       0
  1209 ;;      Locals:         0      21       0       0       0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1211 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1212 ;;Total ram usage:       21 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    5
  1215 ;; This function calls:
  1216 ;;		_lcd_write_cmd
  1217 ;;		_lcd_write_data
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text4
  1224  0019E2                     __ptext4:
  1225                           	opt stack 0
  1226  0019E2                     _displayAlarmOff:
  1227                           	opt stack 25
  1228                           
  1229                           ;RealTimeClockAns.c: 247: unsigned char msgindex, outchar;
  1230                           ;RealTimeClockAns.c: 248: char Message[ ] = "Waiting           ";
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;incstack = 0
  1234  0019E2  EE20  F027         	lfsr	2,displayAlarmOff@F4503
  1235  0019E6  EE10  F0B5         	lfsr	1,displayAlarmOff@Message
  1236  0019EA  0E12               	movlw	18
  1237  0019EC                     u1011:
  1238  0019EC  CFDB FFE3          	movff	plusw2,plusw1
  1239  0019F0  06E8               	decf	wreg,f,c
  1240  0019F2  E2FC               	bc	u1011
  1241                           
  1242                           ;RealTimeClockAns.c: 250: lcd_write_cmd(0xC0);
  1243  0019F4  0EC0               	movlw	192
  1244  0019F6  ECCF  F00B         	call	_lcd_write_cmd
  1245                           
  1246                           ;RealTimeClockAns.c: 251: for (msgindex = 0; msgindex < 20; msgindex++)
  1247  0019FA  0E00               	movlw	0
  1248  0019FC  0100               	movlb	0	; () banked
  1249  0019FE  6FC9               	movwf	displayAlarmOff@msgindex& (0+255),b
  1250  001A00                     l2126:
  1251                           
  1252                           ; BSR set to: 0
  1253  001A00  0E13               	movlw	19
  1254  001A02  0100               	movlb	0	; () banked
  1255  001A04  65C9               	cpfsgt	displayAlarmOff@msgindex& (0+255),b
  1256  001A06  D001               	goto	l2130
  1257  001A08  0012               	return	
  1258  001A0A                     l2130:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;RealTimeClockAns.c: 252: {
  1262                           ;RealTimeClockAns.c: 253: outchar = Message[msgindex];
  1263  001A0A  0100               	movlb	0	; () banked
  1264  001A0C  51C9               	movf	displayAlarmOff@msgindex& (0+255),w,b
  1265  001A0E  0D01               	mullw	1
  1266  001A10  0EB5               	movlw	low displayAlarmOff@Message
  1267  001A12  24F3               	addwf	prodl,w,c
  1268  001A14  6ED9               	movwf	fsr2l,c
  1269  001A16  0E00               	movlw	high displayAlarmOff@Message
  1270  001A18  20F4               	addwfc	prodh,w,c
  1271  001A1A  6EDA               	movwf	fsr2h,c
  1272  001A1C  50DF               	movf	indf2,w,c
  1273  001A1E  0100               	movlb	0	; () banked
  1274  001A20  6FC8               	movwf	displayAlarmOff@outchar& (0+255),b
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;RealTimeClockAns.c: 254: lcd_write_data(outchar);
  1278  001A22  0100               	movlb	0	; () banked
  1279  001A24  51C8               	movf	displayAlarmOff@outchar& (0+255),w,b
  1280  001A26  EC4C  F00A         	call	_lcd_write_data
  1281  001A2A  0100               	movlb	0	; () banked
  1282  001A2C  2BC9               	incf	displayAlarmOff@msgindex& (0+255),f,b
  1283  001A2E  D7E8               	goto	l2126
  1284  001A30                     __end_of_displayAlarmOff:
  1285                           	opt stack 0
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           prodh	equ	0xFF4
  1291                           prodl	equ	0xFF3
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           postdec1	equ	0xFE5
  1295                           plusw1	equ	0xFE3
  1296                           fsr1l	equ	0xFE1
  1297                           indf2	equ	0xFDF
  1298                           plusw2	equ	0xFDB
  1299                           fsr2h	equ	0xFDA
  1300                           fsr2l	equ	0xFD9
  1301                           status	equ	0xFD8
  1302                           
  1303 ;; *************** function _activateBuzzer *****************
  1304 ;; Defined at:
  1305 ;;		line 293 in file "RealTimeClockAns.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;		None               void
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    4
  1326 ;; This function calls:
  1327 ;;		_delay_ms
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text5
  1334  001B02                     __ptext5:
  1335                           	opt stack 0
  1336  001B02                     _activateBuzzer:
  1337                           	opt stack 26
  1338                           
  1339                           ;RealTimeClockAns.c: 295: TRISAbits.TRISA5 = 0;
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;incstack = 0
  1343  001B02  9A92               	bcf	3986,5,c	;volatile
  1344                           
  1345                           ;RealTimeClockAns.c: 297: PORTAbits.RA5 = 1;
  1346  001B04  8A80               	bsf	3968,5,c	;volatile
  1347                           
  1348                           ;RealTimeClockAns.c: 298: delay_ms(500);
  1349  001B06  0E01               	movlw	1
  1350  001B08  6E1E               	movwf	delay_ms@i+1,c
  1351  001B0A  0EF4               	movlw	244
  1352  001B0C  6E1D               	movwf	delay_ms@i,c
  1353  001B0E  EC37  F00D         	call	_delay_ms	;wreg free
  1354                           
  1355                           ;RealTimeClockAns.c: 299: PORTAbits.RA5 = 0;
  1356  001B12  9A80               	bcf	3968,5,c	;volatile
  1357  001B14  0012               	return		;funcret
  1358  001B16                     __end_of_activateBuzzer:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           prodh	equ	0xFF4
  1365                           prodl	equ	0xFF3
  1366                           postinc0	equ	0xFEE
  1367                           wreg	equ	0xFE8
  1368                           postdec1	equ	0xFE5
  1369                           plusw1	equ	0xFE3
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           plusw2	equ	0xFDB
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _SetupTimerInterruptRegisters *****************
  1378 ;; Defined at:
  1379 ;;		line 190 in file "RealTimeClockAns.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		wreg, status,2
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text6
  1408  001AE6                     __ptext6:
  1409                           	opt stack 0
  1410  001AE6                     _SetupTimerInterruptRegisters:
  1411                           	opt stack 27
  1412                           
  1413                           ;RealTimeClockAns.c: 192: RCONbits.IPEN =1;
  1414                           
  1415                           ;incstack = 0
  1416  001AE6  8ED0               	bsf	4048,7,c	;volatile
  1417                           
  1418                           ;RealTimeClockAns.c: 196: INTCONbits.GIEH =1;
  1419  001AE8  8EF2               	bsf	intcon,7,c	;volatile
  1420                           
  1421                           ;RealTimeClockAns.c: 201: T0CON = 0b00000111;
  1422  001AEA  0E07               	movlw	7
  1423  001AEC  6ED5               	movwf	4053,c	;volatile
  1424                           
  1425                           ;RealTimeClockAns.c: 209: INTCON2 = 0b10000100;
  1426  001AEE  0E84               	movlw	132
  1427  001AF0  6EF1               	movwf	intcon2,c	;volatile
  1428                           
  1429                           ;RealTimeClockAns.c: 214: TMR0H = 0x48;
  1430  001AF2  0E48               	movlw	72
  1431  001AF4  6ED7               	movwf	4055,c	;volatile
  1432                           
  1433                           ;RealTimeClockAns.c: 215: TMR0L = 0xE5;
  1434  001AF6  0EE5               	movlw	229
  1435  001AF8  6ED6               	movwf	4054,c	;volatile
  1436                           
  1437                           ;RealTimeClockAns.c: 217: T0CONbits.TMR0ON = 1;
  1438  001AFA  8ED5               	bsf	4053,7,c	;volatile
  1439                           
  1440                           ;RealTimeClockAns.c: 218: INTCONbits.TMR0IE = 1;
  1441  001AFC  8AF2               	bsf	intcon,5,c	;volatile
  1442                           
  1443                           ;RealTimeClockAns.c: 221: INTCONbits.TMR0IF = 0;
  1444  001AFE  94F2               	bcf	intcon,2,c	;volatile
  1445  001B00  0012               	return		;funcret
  1446  001B02                     __end_of_SetupTimerInterruptRegisters:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           prodh	equ	0xFF4
  1453                           prodl	equ	0xFF3
  1454                           intcon	equ	0xFF2
  1455                           intcon2	equ	0xFF1
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           postdec1	equ	0xFE5
  1459                           plusw1	equ	0xFE3
  1460                           fsr1l	equ	0xFE1
  1461                           indf2	equ	0xFDF
  1462                           plusw2	equ	0xFDB
  1463                           fsr2h	equ	0xFDA
  1464                           fsr2l	equ	0xFD9
  1465                           status	equ	0xFD8
  1466                           
  1467 ;; *************** function _SetupTime *****************
  1468 ;; Defined at:
  1469 ;;		line 103 in file "RealTimeClockAns.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  Message        34   19[BANK0 ] unsigned char [34]
  1474 ;;  ctemp           1   61[BANK0 ] unsigned char 
  1475 ;;  msgindex        1   60[BANK0 ] unsigned char 
  1476 ;;  second1         1   59[BANK0 ] unsigned char 
  1477 ;;  second10        1   58[BANK0 ] unsigned char 
  1478 ;;  minute1         1   57[BANK0 ] unsigned char 
  1479 ;;  minute10        1   56[BANK0 ] unsigned char 
  1480 ;;  hour1           1   55[BANK0 ] unsigned char 
  1481 ;;  hour10          1   54[BANK0 ] unsigned char 
  1482 ;;  outchar         1   53[BANK0 ] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;		None               void
  1485 ;; Registers used:
  1486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0
  1493 ;;      Locals:         0      43       0       0       0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1495 ;;      Totals:         0      43       0       0       0       0       0       0       0
  1496 ;;Total ram usage:       43 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    5
  1499 ;; This function calls:
  1500 ;;		_char_2_int
  1501 ;;		_delay_ms
  1502 ;;		_getkey
  1503 ;;		_lcd_write_cmd
  1504 ;;		_lcd_write_data
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text7
  1511  0011B2                     __ptext7:
  1512                           	opt stack 0
  1513  0011B2                     _SetupTime:
  1514                           	opt stack 25
  1515                           
  1516                           ;RealTimeClockAns.c: 105: unsigned char msgindex, outchar, ctemp;
  1517                           ;RealTimeClockAns.c: 106: unsigned char hour10, hour1, minute10, minute1, second10, seco
      +                          nd1;
  1518                           ;RealTimeClockAns.c: 107: char Message[ ] = "Set time HH/MM/SS           :    ";
  1519                           
  1520                           ;incstack = 0
  1521  0011B2  EE20  F060         	lfsr	2,SetupTime@F4482
  1522  0011B6  EE10  F0C8         	lfsr	1,SetupTime@Message
  1523  0011BA  0E21               	movlw	33
  1524  0011BC                     u921:
  1525  0011BC  CFDB FFE3          	movff	plusw2,plusw1
  1526  0011C0  06E8               	decf	wreg,f,c
  1527  0011C2  E2FC               	bc	u921
  1528                           
  1529                           ;RealTimeClockAns.c: 109: lcd_write_cmd(0x80);
  1530  0011C4  0E80               	movlw	128
  1531  0011C6  ECCF  F00B         	call	_lcd_write_cmd
  1532                           
  1533                           ;RealTimeClockAns.c: 111: for (msgindex = 0; msgindex < 20; msgindex++)
  1534  0011CA  0E00               	movlw	0
  1535  0011CC  0100               	movlb	0	; () banked
  1536  0011CE  6FF1               	movwf	SetupTime@msgindex& (0+255),b
  1537  0011D0                     l2014:
  1538                           
  1539                           ; BSR set to: 0
  1540  0011D0  0E13               	movlw	19
  1541  0011D2  0100               	movlb	0	; () banked
  1542  0011D4  65F1               	cpfsgt	SetupTime@msgindex& (0+255),b
  1543  0011D6  D001               	goto	l2018
  1544  0011D8  D013               	goto	l2026
  1545  0011DA                     l2018:
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;RealTimeClockAns.c: 112: {
  1549                           ;RealTimeClockAns.c: 113: outchar = Message[msgindex];
  1550  0011DA  0100               	movlb	0	; () banked
  1551  0011DC  51F1               	movf	SetupTime@msgindex& (0+255),w,b
  1552  0011DE  0D01               	mullw	1
  1553  0011E0  0EC8               	movlw	low SetupTime@Message
  1554  0011E2  24F3               	addwf	prodl,w,c
  1555  0011E4  6ED9               	movwf	fsr2l,c
  1556  0011E6  0E00               	movlw	high SetupTime@Message
  1557  0011E8  20F4               	addwfc	prodh,w,c
  1558  0011EA  6EDA               	movwf	fsr2h,c
  1559  0011EC  50DF               	movf	indf2,w,c
  1560  0011EE  0100               	movlb	0	; () banked
  1561  0011F0  6FEA               	movwf	SetupTime@outchar& (0+255),b
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;RealTimeClockAns.c: 114: lcd_write_data(outchar);
  1565  0011F2  0100               	movlb	0	; () banked
  1566  0011F4  51EA               	movf	SetupTime@outchar& (0+255),w,b
  1567  0011F6  EC4C  F00A         	call	_lcd_write_data
  1568  0011FA  0100               	movlb	0	; () banked
  1569  0011FC  2BF1               	incf	SetupTime@msgindex& (0+255),f,b
  1570  0011FE  D7E8               	goto	l2014
  1571  001200                     l2026:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;RealTimeClockAns.c: 115: }
  1575                           ;RealTimeClockAns.c: 117: lcd_write_cmd(0xC0);
  1576  001200  0EC0               	movlw	192
  1577  001202  ECCF  F00B         	call	_lcd_write_cmd
  1578                           
  1579                           ;RealTimeClockAns.c: 119: ctemp=getkey();
  1580  001206  EC18  F00D         	call	_getkey	;wreg free
  1581  00120A  0100               	movlb	0	; () banked
  1582  00120C  6FF2               	movwf	SetupTime@ctemp& (0+255),b
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;RealTimeClockAns.c: 120: lcd_write_data(ctemp);
  1586  00120E  0100               	movlb	0	; () banked
  1587  001210  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1588  001212  EC4C  F00A         	call	_lcd_write_data
  1589                           
  1590                           ;RealTimeClockAns.c: 121: hour10 = char_2_int (ctemp);
  1591  001216  0100               	movlb	0	; () banked
  1592  001218  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1593  00121A  EC96  F00B         	call	_char_2_int
  1594  00121E  0100               	movlb	0	; () banked
  1595  001220  6FEB               	movwf	SetupTime@hour10& (0+255),b
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;RealTimeClockAns.c: 123: ctemp=getkey();
  1599  001222  EC18  F00D         	call	_getkey	;wreg free
  1600  001226  0100               	movlb	0	; () banked
  1601  001228  6FF2               	movwf	SetupTime@ctemp& (0+255),b
  1602                           
  1603                           ;RealTimeClockAns.c: 124: lcd_write_data(ctemp);
  1604  00122A  0100               	movlb	0	; () banked
  1605  00122C  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1606  00122E  EC4C  F00A         	call	_lcd_write_data
  1607                           
  1608                           ;RealTimeClockAns.c: 125: hour1 = char_2_int (ctemp);
  1609  001232  0100               	movlb	0	; () banked
  1610  001234  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1611  001236  EC96  F00B         	call	_char_2_int
  1612  00123A  0100               	movlb	0	; () banked
  1613  00123C  6FEC               	movwf	SetupTime@hour1& (0+255),b
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;RealTimeClockAns.c: 127: ctemp=getkey();
  1617  00123E  EC18  F00D         	call	_getkey	;wreg free
  1618  001242  0100               	movlb	0	; () banked
  1619  001244  6FF2               	movwf	SetupTime@ctemp& (0+255),b
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;RealTimeClockAns.c: 128: lcd_write_data(ctemp);
  1623  001246  0100               	movlb	0	; () banked
  1624  001248  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1625  00124A  EC4C  F00A         	call	_lcd_write_data
  1626                           
  1627                           ;RealTimeClockAns.c: 129: minute10 = char_2_int (ctemp);
  1628  00124E  0100               	movlb	0	; () banked
  1629  001250  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1630  001252  EC96  F00B         	call	_char_2_int
  1631  001256  0100               	movlb	0	; () banked
  1632  001258  6FED               	movwf	SetupTime@minute10& (0+255),b
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;RealTimeClockAns.c: 131: ctemp=getkey();
  1636  00125A  EC18  F00D         	call	_getkey	;wreg free
  1637  00125E  0100               	movlb	0	; () banked
  1638  001260  6FF2               	movwf	SetupTime@ctemp& (0+255),b
  1639                           
  1640                           ;RealTimeClockAns.c: 132: lcd_write_data(ctemp);
  1641  001262  0100               	movlb	0	; () banked
  1642  001264  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1643  001266  EC4C  F00A         	call	_lcd_write_data
  1644                           
  1645                           ;RealTimeClockAns.c: 133: minute1 = char_2_int (ctemp);
  1646  00126A  0100               	movlb	0	; () banked
  1647  00126C  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1648  00126E  EC96  F00B         	call	_char_2_int
  1649  001272  0100               	movlb	0	; () banked
  1650  001274  6FEE               	movwf	SetupTime@minute1& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;RealTimeClockAns.c: 135: ctemp=getkey();
  1654  001276  EC18  F00D         	call	_getkey	;wreg free
  1655  00127A  0100               	movlb	0	; () banked
  1656  00127C  6FF2               	movwf	SetupTime@ctemp& (0+255),b
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;RealTimeClockAns.c: 136: lcd_write_data(ctemp);
  1660  00127E  0100               	movlb	0	; () banked
  1661  001280  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1662  001282  EC4C  F00A         	call	_lcd_write_data
  1663                           
  1664                           ;RealTimeClockAns.c: 137: second10 = char_2_int (ctemp);
  1665  001286  0100               	movlb	0	; () banked
  1666  001288  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1667  00128A  EC96  F00B         	call	_char_2_int
  1668  00128E  0100               	movlb	0	; () banked
  1669  001290  6FEF               	movwf	SetupTime@second10& (0+255),b
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;RealTimeClockAns.c: 139: ctemp=getkey();
  1673  001292  EC18  F00D         	call	_getkey	;wreg free
  1674  001296  0100               	movlb	0	; () banked
  1675  001298  6FF2               	movwf	SetupTime@ctemp& (0+255),b
  1676                           
  1677                           ;RealTimeClockAns.c: 140: lcd_write_data(ctemp);
  1678  00129A  0100               	movlb	0	; () banked
  1679  00129C  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1680  00129E  EC4C  F00A         	call	_lcd_write_data
  1681                           
  1682                           ;RealTimeClockAns.c: 141: second1 = char_2_int (ctemp);
  1683  0012A2  0100               	movlb	0	; () banked
  1684  0012A4  51F2               	movf	SetupTime@ctemp& (0+255),w,b
  1685  0012A6  EC96  F00B         	call	_char_2_int
  1686  0012AA  0100               	movlb	0	; () banked
  1687  0012AC  6FF0               	movwf	SetupTime@second1& (0+255),b
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;RealTimeClockAns.c: 143: hour = hour10 * 10 + hour1;
  1691  0012AE  0100               	movlb	0	; () banked
  1692  0012B0  51EB               	movf	SetupTime@hour10& (0+255),w,b
  1693  0012B2  0D0A               	mullw	10
  1694  0012B4  50F3               	movf	prodl,w,c
  1695  0012B6  0100               	movlb	0	; () banked
  1696  0012B8  25EC               	addwf	SetupTime@hour1& (0+255),w,b
  1697  0012BA  6E3A               	movwf	_hour,c
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;RealTimeClockAns.c: 144: minute = minute10 * 10 + minute1;
  1701  0012BC  0100               	movlb	0	; () banked
  1702  0012BE  51ED               	movf	SetupTime@minute10& (0+255),w,b
  1703  0012C0  0D0A               	mullw	10
  1704  0012C2  50F3               	movf	prodl,w,c
  1705  0012C4  0100               	movlb	0	; () banked
  1706  0012C6  25EE               	addwf	SetupTime@minute1& (0+255),w,b
  1707  0012C8  6E3C               	movwf	_minute,c
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;RealTimeClockAns.c: 145: second = second10 * 10 + second1;
  1711  0012CA  0100               	movlb	0	; () banked
  1712  0012CC  51EF               	movf	SetupTime@second10& (0+255),w,b
  1713  0012CE  0D0A               	mullw	10
  1714  0012D0  50F3               	movf	prodl,w,c
  1715  0012D2  0100               	movlb	0	; () banked
  1716  0012D4  25F0               	addwf	SetupTime@second1& (0+255),w,b
  1717  0012D6  6E3E               	movwf	_second,c
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;RealTimeClockAns.c: 147: delay_ms(500);
  1721  0012D8  0E01               	movlw	1
  1722  0012DA  6E1E               	movwf	delay_ms@i+1,c
  1723  0012DC  0EF4               	movlw	244
  1724  0012DE  6E1D               	movwf	delay_ms@i,c
  1725  0012E0  EC37  F00D         	call	_delay_ms	;wreg free
  1726                           
  1727                           ;RealTimeClockAns.c: 148: lcd_write_cmd(0x01);
  1728  0012E4  0E01               	movlw	1
  1729  0012E6  ECCF  F00B         	call	_lcd_write_cmd
  1730  0012EA  0012               	return		;funcret
  1731  0012EC                     __end_of_SetupTime:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           prodh	equ	0xFF4
  1738                           prodl	equ	0xFF3
  1739                           intcon	equ	0xFF2
  1740                           intcon2	equ	0xFF1
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           plusw1	equ	0xFE3
  1745                           fsr1l	equ	0xFE1
  1746                           indf2	equ	0xFDF
  1747                           plusw2	equ	0xFDB
  1748                           fsr2h	equ	0xFDA
  1749                           fsr2l	equ	0xFD9
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _SetupAlarmTime *****************
  1753 ;; Defined at:
  1754 ;;		line 151 in file "RealTimeClockAns.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  Message        31   19[BANK0 ] unsigned char [31]
  1759 ;;  ctemp           1   56[BANK0 ] unsigned char 
  1760 ;;  msgindex        1   55[BANK0 ] unsigned char 
  1761 ;;  minute1         1   54[BANK0 ] unsigned char 
  1762 ;;  minute10        1   53[BANK0 ] unsigned char 
  1763 ;;  hour1           1   52[BANK0 ] unsigned char 
  1764 ;;  hour10          1   51[BANK0 ] unsigned char 
  1765 ;;  outchar         1   50[BANK0 ] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;		None               void
  1768 ;; Registers used:
  1769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0
  1776 ;;      Locals:         0      38       0       0       0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1778 ;;      Totals:         0      38       0       0       0       0       0       0       0
  1779 ;;Total ram usage:       38 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    5
  1782 ;; This function calls:
  1783 ;;		_char_2_int
  1784 ;;		_delay_ms
  1785 ;;		_getkey
  1786 ;;		_lcd_write_cmd
  1787 ;;		_lcd_write_data
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text8
  1794  0012EC                     __ptext8:
  1795                           	opt stack 0
  1796  0012EC                     _SetupAlarmTime:
  1797                           	opt stack 25
  1798                           
  1799                           ;RealTimeClockAns.c: 153: unsigned char msgindex, outchar, ctemp;
  1800                           ;RealTimeClockAns.c: 154: unsigned char hour10, hour1, minute10, minute1;
  1801                           ;RealTimeClockAns.c: 155: char Message[ ] = "Set time to dispense         :";
  1802                           
  1803                           ;incstack = 0
  1804  0012EC  EE20  F082         	lfsr	2,SetupAlarmTime@F4492
  1805  0012F0  EE10  F0C8         	lfsr	1,SetupAlarmTime@Message
  1806  0012F4  0E1E               	movlw	30
  1807  0012F6                     u951:
  1808  0012F6  CFDB FFE3          	movff	plusw2,plusw1
  1809  0012FA  06E8               	decf	wreg,f,c
  1810  0012FC  E2FC               	bc	u951
  1811                           
  1812                           ;RealTimeClockAns.c: 157: lcd_write_cmd(0x80);
  1813  0012FE  0E80               	movlw	128
  1814  001300  ECCF  F00B         	call	_lcd_write_cmd
  1815                           
  1816                           ;RealTimeClockAns.c: 159: for (msgindex = 0; msgindex < 20; msgindex++)
  1817  001304  0E00               	movlw	0
  1818  001306  0100               	movlb	0	; () banked
  1819  001308  6FEC               	movwf	SetupAlarmTime@msgindex& (0+255),b
  1820  00130A                     l2068:
  1821                           
  1822                           ; BSR set to: 0
  1823  00130A  0E13               	movlw	19
  1824  00130C  0100               	movlb	0	; () banked
  1825  00130E  65EC               	cpfsgt	SetupAlarmTime@msgindex& (0+255),b
  1826  001310  D001               	goto	l2072
  1827  001312  D013               	goto	l2080
  1828  001314                     l2072:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;RealTimeClockAns.c: 160: {
  1832                           ;RealTimeClockAns.c: 161: outchar = Message[msgindex];
  1833  001314  0100               	movlb	0	; () banked
  1834  001316  51EC               	movf	SetupAlarmTime@msgindex& (0+255),w,b
  1835  001318  0D01               	mullw	1
  1836  00131A  0EC8               	movlw	low SetupAlarmTime@Message
  1837  00131C  24F3               	addwf	prodl,w,c
  1838  00131E  6ED9               	movwf	fsr2l,c
  1839  001320  0E00               	movlw	high SetupAlarmTime@Message
  1840  001322  20F4               	addwfc	prodh,w,c
  1841  001324  6EDA               	movwf	fsr2h,c
  1842  001326  50DF               	movf	indf2,w,c
  1843  001328  0100               	movlb	0	; () banked
  1844  00132A  6FE7               	movwf	SetupAlarmTime@outchar& (0+255),b
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;RealTimeClockAns.c: 162: lcd_write_data(outchar);
  1848  00132C  0100               	movlb	0	; () banked
  1849  00132E  51E7               	movf	SetupAlarmTime@outchar& (0+255),w,b
  1850  001330  EC4C  F00A         	call	_lcd_write_data
  1851  001334  0100               	movlb	0	; () banked
  1852  001336  2BEC               	incf	SetupAlarmTime@msgindex& (0+255),f,b
  1853  001338  D7E8               	goto	l2068
  1854  00133A                     l2080:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;RealTimeClockAns.c: 163: }
  1858                           ;RealTimeClockAns.c: 165: lcd_write_cmd(0xC0);
  1859  00133A  0EC0               	movlw	192
  1860  00133C  ECCF  F00B         	call	_lcd_write_cmd
  1861                           
  1862                           ;RealTimeClockAns.c: 167: ctemp=getkey();
  1863  001340  EC18  F00D         	call	_getkey	;wreg free
  1864  001344  0100               	movlb	0	; () banked
  1865  001346  6FED               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;RealTimeClockAns.c: 168: lcd_write_data(ctemp);
  1869  001348  0100               	movlb	0	; () banked
  1870  00134A  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1871  00134C  EC4C  F00A         	call	_lcd_write_data
  1872                           
  1873                           ;RealTimeClockAns.c: 169: hour10 = char_2_int (ctemp);
  1874  001350  0100               	movlb	0	; () banked
  1875  001352  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1876  001354  EC96  F00B         	call	_char_2_int
  1877  001358  0100               	movlb	0	; () banked
  1878  00135A  6FE8               	movwf	SetupAlarmTime@hour10& (0+255),b
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;RealTimeClockAns.c: 171: ctemp=getkey();
  1882  00135C  EC18  F00D         	call	_getkey	;wreg free
  1883  001360  0100               	movlb	0	; () banked
  1884  001362  6FED               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1885                           
  1886                           ;RealTimeClockAns.c: 172: lcd_write_data(ctemp);
  1887  001364  0100               	movlb	0	; () banked
  1888  001366  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1889  001368  EC4C  F00A         	call	_lcd_write_data
  1890                           
  1891                           ;RealTimeClockAns.c: 173: hour1 = char_2_int (ctemp);
  1892  00136C  0100               	movlb	0	; () banked
  1893  00136E  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1894  001370  EC96  F00B         	call	_char_2_int
  1895  001374  0100               	movlb	0	; () banked
  1896  001376  6FE9               	movwf	SetupAlarmTime@hour1& (0+255),b
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;RealTimeClockAns.c: 175: ctemp=getkey();
  1900  001378  EC18  F00D         	call	_getkey	;wreg free
  1901  00137C  0100               	movlb	0	; () banked
  1902  00137E  6FED               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;RealTimeClockAns.c: 176: lcd_write_data(ctemp);
  1906  001380  0100               	movlb	0	; () banked
  1907  001382  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1908  001384  EC4C  F00A         	call	_lcd_write_data
  1909                           
  1910                           ;RealTimeClockAns.c: 177: minute10 = char_2_int (ctemp);
  1911  001388  0100               	movlb	0	; () banked
  1912  00138A  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1913  00138C  EC96  F00B         	call	_char_2_int
  1914  001390  0100               	movlb	0	; () banked
  1915  001392  6FEA               	movwf	SetupAlarmTime@minute10& (0+255),b
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;RealTimeClockAns.c: 179: ctemp=getkey();
  1919  001394  EC18  F00D         	call	_getkey	;wreg free
  1920  001398  0100               	movlb	0	; () banked
  1921  00139A  6FED               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1922                           
  1923                           ;RealTimeClockAns.c: 180: lcd_write_data(ctemp);
  1924  00139C  0100               	movlb	0	; () banked
  1925  00139E  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1926  0013A0  EC4C  F00A         	call	_lcd_write_data
  1927                           
  1928                           ;RealTimeClockAns.c: 181: minute1 = char_2_int (ctemp);
  1929  0013A4  0100               	movlb	0	; () banked
  1930  0013A6  51ED               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1931  0013A8  EC96  F00B         	call	_char_2_int
  1932  0013AC  0100               	movlb	0	; () banked
  1933  0013AE  6FEB               	movwf	SetupAlarmTime@minute1& (0+255),b
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;RealTimeClockAns.c: 183: hourA = hour10 * 10 + hour1;
  1937  0013B0  0100               	movlb	0	; () banked
  1938  0013B2  51E8               	movf	SetupAlarmTime@hour10& (0+255),w,b
  1939  0013B4  0D0A               	mullw	10
  1940  0013B6  50F3               	movf	prodl,w,c
  1941  0013B8  0100               	movlb	0	; () banked
  1942  0013BA  25E9               	addwf	SetupAlarmTime@hour1& (0+255),w,b
  1943  0013BC  6E3B               	movwf	_hourA,c
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;RealTimeClockAns.c: 184: minuteA = minute10 * 10 + minute1;
  1947  0013BE  0100               	movlb	0	; () banked
  1948  0013C0  51EA               	movf	SetupAlarmTime@minute10& (0+255),w,b
  1949  0013C2  0D0A               	mullw	10
  1950  0013C4  50F3               	movf	prodl,w,c
  1951  0013C6  0100               	movlb	0	; () banked
  1952  0013C8  25EB               	addwf	SetupAlarmTime@minute1& (0+255),w,b
  1953  0013CA  6E3D               	movwf	_minuteA,c
  1954                           
  1955                           ;RealTimeClockAns.c: 186: delay_ms(500);
  1956  0013CC  0E01               	movlw	1
  1957  0013CE  6E1E               	movwf	delay_ms@i+1,c
  1958  0013D0  0EF4               	movlw	244
  1959  0013D2  6E1D               	movwf	delay_ms@i,c
  1960  0013D4  EC37  F00D         	call	_delay_ms	;wreg free
  1961                           
  1962                           ;RealTimeClockAns.c: 187: lcd_write_cmd(0x01);
  1963  0013D8  0E01               	movlw	1
  1964  0013DA  ECCF  F00B         	call	_lcd_write_cmd
  1965  0013DE  0012               	return		;funcret
  1966  0013E0                     __end_of_SetupAlarmTime:
  1967                           	opt stack 0
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodh	equ	0xFF4
  1973                           prodl	equ	0xFF3
  1974                           intcon	equ	0xFF2
  1975                           intcon2	equ	0xFF1
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           postdec1	equ	0xFE5
  1979                           plusw1	equ	0xFE3
  1980                           fsr1l	equ	0xFE1
  1981                           indf2	equ	0xFDF
  1982                           plusw2	equ	0xFDB
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function _lcd_write_data *****************
  1988 ;; Defined at:
  1989 ;;		line 43 in file "lcd_utilities.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  data            1    wreg     unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  data            1   30[COMRAM] unsigned char 
  1994 ;;  temp1           1   31[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;		None               void
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2004 ;;      Params:         0       0       0       0       0       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2007 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2008 ;;Total ram usage:        3 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    4
  2011 ;; This function calls:
  2012 ;;		_lcd_strobe
  2013 ;; This function is called by:
  2014 ;;		_SetupTime
  2015 ;;		_SetupAlarmTime
  2016 ;;		_displayAlarmOn
  2017 ;;		_displayAlarmOff
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text9
  2022  001498                     __ptext9:
  2023                           	opt stack 0
  2024  001498                     _lcd_write_data:
  2025                           	opt stack 25
  2026                           
  2027                           ;incstack = 0
  2028                           ;lcd_write_data@data stored from wreg
  2029  001498  6E1F               	movwf	lcd_write_data@data,c
  2030                           
  2031                           ;lcd_utilities.c: 45: char temp1;
  2032                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2033  00149A  8C83               	bsf	3971,6,c	;volatile
  2034                           
  2035                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2036  00149C  0E3F               	movlw	63
  2037  00149E  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2038  0014A0  0E55               	movlw	85
  2039  0014A2                     u1127:
  2040  0014A2  2EE8               	decfsz	wreg,f,c
  2041  0014A4  D7FE               	goto	u1127
  2042  0014A6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2043  0014A8  D7FC               	goto	u1127
  2044  0014AA  F000               	nop	
  2045                           
  2046                           ;lcd_utilities.c: 50: temp1 = data;
  2047  0014AC  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2048                           
  2049                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2050  0014B0  3820               	swapf	lcd_write_data@temp1,w,c
  2051  0014B2  0B0F               	andlw	15
  2052  0014B4  6E20               	movwf	lcd_write_data@temp1,c
  2053                           
  2054                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2055  0014B6  5020               	movf	lcd_write_data@temp1,w,c
  2056  0014B8  0B0F               	andlw	15
  2057  0014BA  6E83               	movwf	3971,c	;volatile
  2058                           
  2059                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2060  0014BC  0E7D               	movlw	125
  2061  0014BE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2062  0014C0  0EAC               	movlw	172
  2063  0014C2                     u1137:
  2064  0014C2  2EE8               	decfsz	wreg,f,c
  2065  0014C4  D7FE               	goto	u1137
  2066  0014C6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2067  0014C8  D7FC               	goto	u1137
  2068                           
  2069                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2070  0014CA  8C83               	bsf	3971,6,c	;volatile
  2071                           
  2072                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2073  0014CC  0E7D               	movlw	125
  2074  0014CE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2075  0014D0  0EAC               	movlw	172
  2076  0014D2                     u1147:
  2077  0014D2  2EE8               	decfsz	wreg,f,c
  2078  0014D4  D7FE               	goto	u1147
  2079  0014D6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2080  0014D8  D7FC               	goto	u1147
  2081                           
  2082                           ;lcd_utilities.c: 57: lcd_strobe();
  2083  0014DA  EC51  F00D         	call	_lcd_strobe	;wreg free
  2084                           
  2085                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2086  0014DE  0E7D               	movlw	125
  2087  0014E0  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2088  0014E2  0EAC               	movlw	172
  2089  0014E4                     u1157:
  2090  0014E4  2EE8               	decfsz	wreg,f,c
  2091  0014E6  D7FE               	goto	u1157
  2092  0014E8  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2093  0014EA  D7FC               	goto	u1157
  2094                           
  2095                           ;lcd_utilities.c: 60: temp1 = data;
  2096  0014EC  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2097                           
  2098                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2099  0014F0  5020               	movf	lcd_write_data@temp1,w,c
  2100  0014F2  0B0F               	andlw	15
  2101  0014F4  6E83               	movwf	3971,c	;volatile
  2102                           
  2103                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2104  0014F6  0E7D               	movlw	125
  2105  0014F8  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2106  0014FA  0EAC               	movlw	172
  2107  0014FC                     u1167:
  2108  0014FC  2EE8               	decfsz	wreg,f,c
  2109  0014FE  D7FE               	goto	u1167
  2110  001500  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2111  001502  D7FC               	goto	u1167
  2112                           
  2113                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2114  001504  8C83               	bsf	3971,6,c	;volatile
  2115                           
  2116                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2117  001506  0E9C               	movlw	156
  2118  001508  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2119  00150A  0ED7               	movlw	215
  2120  00150C                     u1177:
  2121  00150C  2EE8               	decfsz	wreg,f,c
  2122  00150E  D7FE               	goto	u1177
  2123  001510  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2124  001512  D7FC               	goto	u1177
  2125  001514  F000               	nop	
  2126                           
  2127                           ;lcd_utilities.c: 66: lcd_strobe();
  2128  001516  EC51  F00D         	call	_lcd_strobe	;wreg free
  2129                           
  2130                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2131  00151A  0E9C               	movlw	156
  2132  00151C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2133  00151E  0ED7               	movlw	215
  2134  001520                     u1187:
  2135  001520  2EE8               	decfsz	wreg,f,c
  2136  001522  D7FE               	goto	u1187
  2137  001524  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2138  001526  D7FC               	goto	u1187
  2139  001528  F000               	nop	
  2140  00152A  0012               	return		;funcret
  2141  00152C                     __end_of_lcd_write_data:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           prodh	equ	0xFF4
  2148                           prodl	equ	0xFF3
  2149                           intcon	equ	0xFF2
  2150                           intcon2	equ	0xFF1
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postdec1	equ	0xFE5
  2154                           plusw1	equ	0xFE3
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           plusw2	equ	0xFDB
  2158                           fsr2h	equ	0xFDA
  2159                           fsr2l	equ	0xFD9
  2160                           status	equ	0xFD8
  2161                           
  2162 ;; *************** function _lcd_write_cmd *****************
  2163 ;; Defined at:
  2164 ;;		line 18 in file "lcd_utilities.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  cmd             1    wreg     unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  cmd             1   30[COMRAM] unsigned char 
  2169 ;;  temp2           1   31[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;		None               void
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0
  2180 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2181 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2182 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2183 ;;Total ram usage:        3 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    4
  2186 ;; This function calls:
  2187 ;;		_lcd_strobe
  2188 ;; This function is called by:
  2189 ;;		_lcd_init
  2190 ;;		_SetupTime
  2191 ;;		_SetupAlarmTime
  2192 ;;		_displayAlarmOn
  2193 ;;		_displayAlarmOff
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text10
  2198  00179E                     __ptext10:
  2199                           	opt stack 0
  2200  00179E                     _lcd_write_cmd:
  2201                           	opt stack 25
  2202                           
  2203                           ;incstack = 0
  2204                           ;lcd_write_cmd@cmd stored from wreg
  2205  00179E  6E1F               	movwf	lcd_write_cmd@cmd,c
  2206                           
  2207                           ;lcd_utilities.c: 20: unsigned char temp2;
  2208                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2209  0017A0  9C83               	bcf	3971,6,c	;volatile
  2210                           
  2211                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2212  0017A2  0E3F               	movlw	63
  2213  0017A4  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2214  0017A6  0E55               	movlw	85
  2215  0017A8                     u1197:
  2216  0017A8  2EE8               	decfsz	wreg,f,c
  2217  0017AA  D7FE               	goto	u1197
  2218  0017AC  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2219  0017AE  D7FC               	goto	u1197
  2220  0017B0  F000               	nop	
  2221                           
  2222                           ;lcd_utilities.c: 23: temp2 = cmd;
  2223  0017B2  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2224                           
  2225                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2226  0017B6  3820               	swapf	lcd_write_cmd@temp2,w,c
  2227  0017B8  0B0F               	andlw	15
  2228  0017BA  6E20               	movwf	lcd_write_cmd@temp2,c
  2229                           
  2230                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2231  0017BC  5020               	movf	lcd_write_cmd@temp2,w,c
  2232  0017BE  0B0F               	andlw	15
  2233  0017C0  6E83               	movwf	3971,c	;volatile
  2234                           
  2235                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2236  0017C2  0E7D               	movlw	125
  2237  0017C4  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2238  0017C6  0EAC               	movlw	172
  2239  0017C8                     u1207:
  2240  0017C8  2EE8               	decfsz	wreg,f,c
  2241  0017CA  D7FE               	goto	u1207
  2242  0017CC  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2243  0017CE  D7FC               	goto	u1207
  2244                           
  2245                           ;lcd_utilities.c: 28: lcd_strobe();
  2246  0017D0  EC51  F00D         	call	_lcd_strobe	;wreg free
  2247                           
  2248                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2249  0017D4  0E7D               	movlw	125
  2250  0017D6  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2251  0017D8  0EAC               	movlw	172
  2252  0017DA                     u1217:
  2253  0017DA  2EE8               	decfsz	wreg,f,c
  2254  0017DC  D7FE               	goto	u1217
  2255  0017DE  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2256  0017E0  D7FC               	goto	u1217
  2257                           
  2258                           ;lcd_utilities.c: 32: temp2 = cmd;
  2259  0017E2  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2260                           
  2261                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2262  0017E6  5020               	movf	lcd_write_cmd@temp2,w,c
  2263  0017E8  0B0F               	andlw	15
  2264  0017EA  6E83               	movwf	3971,c	;volatile
  2265                           
  2266                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2267  0017EC  0E7D               	movlw	125
  2268  0017EE  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2269  0017F0  0EAC               	movlw	172
  2270  0017F2                     u1227:
  2271  0017F2  2EE8               	decfsz	wreg,f,c
  2272  0017F4  D7FE               	goto	u1227
  2273  0017F6  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2274  0017F8  D7FC               	goto	u1227
  2275                           
  2276                           ;lcd_utilities.c: 36: lcd_strobe();
  2277  0017FA  EC51  F00D         	call	_lcd_strobe	;wreg free
  2278                           
  2279                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2280  0017FE  0E7D               	movlw	125
  2281  001800  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2282  001802  0EAC               	movlw	172
  2283  001804                     u1237:
  2284  001804  2EE8               	decfsz	wreg,f,c
  2285  001806  D7FE               	goto	u1237
  2286  001808  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2287  00180A  D7FC               	goto	u1237
  2288  00180C  0012               	return		;funcret
  2289  00180E                     __end_of_lcd_write_cmd:
  2290                           	opt stack 0
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           prodh	equ	0xFF4
  2296                           prodl	equ	0xFF3
  2297                           intcon	equ	0xFF2
  2298                           intcon2	equ	0xFF1
  2299                           postinc0	equ	0xFEE
  2300                           wreg	equ	0xFE8
  2301                           postdec1	equ	0xFE5
  2302                           plusw1	equ	0xFE3
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           plusw2	equ	0xFDB
  2306                           fsr2h	equ	0xFDA
  2307                           fsr2l	equ	0xFD9
  2308                           status	equ	0xFD8
  2309                           
  2310 ;; *************** function _lcd_strobe *****************
  2311 ;; Defined at:
  2312 ;;		line 73 in file "lcd_utilities.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;		None               void
  2319 ;; Registers used:
  2320 ;;		wreg
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2329 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2330 ;;Total ram usage:        1 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    3
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_lcd_write_cmd
  2337 ;;		_lcd_write_data
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text11
  2342  001AA2                     __ptext11:
  2343                           	opt stack 0
  2344  001AA2                     _lcd_strobe:
  2345                           	opt stack 25
  2346                           
  2347                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2348                           
  2349                           ;incstack = 0
  2350  001AA2  8883               	bsf	3971,4,c	;volatile
  2351                           
  2352                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2353  001AA4  0E7D               	movlw	125
  2354  001AA6  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2355  001AA8  0EAC               	movlw	172
  2356  001AAA                     u1247:
  2357  001AAA  2EE8               	decfsz	wreg,f,c
  2358  001AAC  D7FE               	goto	u1247
  2359  001AAE  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2360  001AB0  D7FC               	goto	u1247
  2361                           
  2362                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2363  001AB2  9883               	bcf	3971,4,c	;volatile
  2364                           
  2365                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2366  001AB4  0E7D               	movlw	125
  2367  001AB6  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2368  001AB8  0EAC               	movlw	172
  2369  001ABA                     u1257:
  2370  001ABA  2EE8               	decfsz	wreg,f,c
  2371  001ABC  D7FE               	goto	u1257
  2372  001ABE  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2373  001AC0  D7FC               	goto	u1257
  2374  001AC2  0012               	return		;funcret
  2375  001AC4                     __end_of_lcd_strobe:
  2376                           	opt stack 0
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           prodh	equ	0xFF4
  2382                           prodl	equ	0xFF3
  2383                           intcon	equ	0xFF2
  2384                           intcon2	equ	0xFF1
  2385                           postinc0	equ	0xFEE
  2386                           wreg	equ	0xFE8
  2387                           postdec1	equ	0xFE5
  2388                           plusw1	equ	0xFE3
  2389                           fsr1l	equ	0xFE1
  2390                           indf2	equ	0xFDF
  2391                           plusw2	equ	0xFDB
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _getkey *****************
  2397 ;; Defined at:
  2398 ;;		line 17 in file "keypad_utilities.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2403 ;;  keycode         1   18[BANK0 ] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      unsigned char 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2417 ;;Total ram usage:       19 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_SetupTime
  2424 ;;		_SetupAlarmTime
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text12
  2429  001A30                     __ptext12:
  2430                           	opt stack 0
  2431  001A30                     _getkey:
  2432                           	opt stack 26
  2433                           
  2434                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2435                           
  2436                           ;incstack = 0
  2437  001A30  0E1B               	movlw	low getkey@F4444
  2438  001A32  6EF6               	movwf	tblptrl,c
  2439  001A34                     	if	1	;There is more than 1 active tblptr byte
  2440  001A34  0E10               	movlw	high getkey@F4444
  2441  001A36  6EF7               	movwf	tblptrh,c
  2442  001A38                     	endif
  2443  001A38                     	if	0	;There are less than 3 active tblptr bytes
  2444  001A38                     	endif
  2445  001A38  EE20  F0B5         	lfsr	2,getkey@lookup
  2446  001A3C  0E11               	movlw	17
  2447  001A3E                     u870:
  2448  001A3E  0009               	tblrd		*+
  2449  001A40  CFF5 FFDE          	movff	tablat,postinc2
  2450  001A44  06E8               	decf	wreg,f,c
  2451  001A46  E2FB               	bc	u870
  2452  001A48                     l9:
  2453  001A48  AA81               	btfss	3969,5,c	;volatile
  2454  001A4A  D7FE               	goto	l9
  2455                           
  2456                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2457  001A4C  5081               	movf	3969,w,c	;volatile
  2458  001A4E  0B0F               	andlw	15
  2459  001A50  0100               	movlb	0	; () banked
  2460  001A52  6FC7               	movwf	getkey@keycode& (0+255),b
  2461  001A54                     l12:
  2462  001A54  BA81               	btfsc	3969,5,c	;volatile
  2463  001A56  D7FE               	goto	l12
  2464                           
  2465                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2466  001A58  0100               	movlb	0	; () banked
  2467  001A5A  51C7               	movf	getkey@keycode& (0+255),w,b
  2468  001A5C  0D01               	mullw	1
  2469  001A5E  0EB5               	movlw	low getkey@lookup
  2470  001A60  24F3               	addwf	prodl,w,c
  2471  001A62  6ED9               	movwf	fsr2l,c
  2472  001A64  0E00               	movlw	high getkey@lookup
  2473  001A66  20F4               	addwfc	prodh,w,c
  2474  001A68  6EDA               	movwf	fsr2h,c
  2475  001A6A  50DF               	movf	indf2,w,c
  2476  001A6C  0012               	return	
  2477  001A6E                     __end_of_getkey:
  2478                           	opt stack 0
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           prodh	equ	0xFF4
  2484                           prodl	equ	0xFF3
  2485                           intcon	equ	0xFF2
  2486                           intcon2	equ	0xFF1
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           postdec1	equ	0xFE5
  2490                           plusw1	equ	0xFE3
  2491                           fsr1l	equ	0xFE1
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           plusw2	equ	0xFDB
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _delay_ms *****************
  2500 ;; Defined at:
  2501 ;;		line 10 in file "delays_utilities.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  i               2   28[COMRAM] unsigned int 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  j               2   31[COMRAM] unsigned int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0
  2516 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2517 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2518 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:        5 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    3
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_SetupTime
  2526 ;;		_SetupAlarmTime
  2527 ;;		_turnServoMotor
  2528 ;;		_activateBuzzer
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text13
  2533  001A6E                     __ptext13:
  2534                           	opt stack 0
  2535  001A6E                     _delay_ms:
  2536                           	opt stack 26
  2537                           
  2538                           ;delays_utilities.c: 12: if(i!=0)
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;incstack = 0
  2542  001A6E  501D               	movf	delay_ms@i,w,c
  2543  001A70  101E               	iorwf	delay_ms@i+1,w,c
  2544  001A72  B4D8               	btfsc	status,2,c
  2545  001A74  0012               	return	
  2546                           
  2547                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2548  001A76  0E00               	movlw	0
  2549  001A78  6E21               	movwf	delay_ms@j+1,c
  2550  001A7A  0E00               	movlw	0
  2551  001A7C  6E20               	movwf	delay_ms@j,c
  2552  001A7E  D00A               	goto	l21
  2553  001A80                     l1402:
  2554  001A80  0E10               	movlw	16
  2555  001A82  6E1F               	movwf	??_delay_ms& (0+255),c
  2556  001A84  0E94               	movlw	148
  2557  001A86                     u1267:
  2558  001A86  2EE8               	decfsz	wreg,f,c
  2559  001A88  D7FE               	goto	u1267
  2560  001A8A  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2561  001A8C  D7FC               	goto	u1267
  2562  001A8E  D000               	nop2	
  2563  001A90  4A20               	infsnz	delay_ms@j,f,c
  2564  001A92  2A21               	incf	delay_ms@j+1,f,c
  2565  001A94                     l21:
  2566  001A94  501D               	movf	delay_ms@i,w,c
  2567  001A96  5C20               	subwf	delay_ms@j,w,c
  2568  001A98  501E               	movf	delay_ms@i+1,w,c
  2569  001A9A  5821               	subwfb	delay_ms@j+1,w,c
  2570  001A9C  B0D8               	btfsc	status,0,c
  2571  001A9E  0012               	return	
  2572  001AA0  D7EF               	goto	l1402
  2573  001AA2                     __end_of_delay_ms:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           prodh	equ	0xFF4
  2580                           prodl	equ	0xFF3
  2581                           intcon	equ	0xFF2
  2582                           intcon2	equ	0xFF1
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           plusw1	equ	0xFE3
  2587                           fsr1l	equ	0xFE1
  2588                           indf2	equ	0xFDF
  2589                           postinc2	equ	0xFDE
  2590                           plusw2	equ	0xFDB
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function _char_2_int *****************
  2596 ;; Defined at:
  2597 ;;		line 31 in file "RealTimeClockAns.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  char1           1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  char1           1   28[COMRAM] unsigned char 
  2602 ;;  int1            1   29[COMRAM] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0
  2613 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2615 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2616 ;;Total ram usage:        2 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    3
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_SetupTime
  2623 ;;		_SetupAlarmTime
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text14
  2628  00172C                     __ptext14:
  2629                           	opt stack 0
  2630  00172C                     _char_2_int:
  2631                           	opt stack 26
  2632                           
  2633                           ;incstack = 0
  2634                           ;char_2_int@char1 stored from wreg
  2635  00172C  6E1D               	movwf	char_2_int@char1,c
  2636                           
  2637                           ;RealTimeClockAns.c: 33: unsigned char int1;
  2638                           ;RealTimeClockAns.c: 34: switch (char1)
  2639  00172E  D015               	goto	l1490
  2640  001730                     l1470:
  2641  001730  0E01               	movlw	1
  2642  001732  D011               	goto	L11
  2643  001734                     l1472:
  2644  001734  0E02               	movlw	2
  2645  001736  D00F               	goto	L11
  2646  001738                     l1474:
  2647  001738  0E03               	movlw	3
  2648  00173A  D00D               	goto	L11
  2649  00173C                     l1476:
  2650  00173C  0E04               	movlw	4
  2651  00173E  D00B               	goto	L11
  2652  001740                     l1478:
  2653  001740  0E05               	movlw	5
  2654  001742  D009               	goto	L11
  2655  001744                     l1480:
  2656  001744  0E06               	movlw	6
  2657  001746  D007               	goto	L11
  2658  001748                     l1482:
  2659  001748  0E07               	movlw	7
  2660  00174A  D005               	goto	L11
  2661  00174C                     l1484:
  2662  00174C  0E08               	movlw	8
  2663  00174E  D003               	goto	L11
  2664  001750                     l1486:
  2665  001750  0E09               	movlw	9
  2666  001752  D001               	goto	L11
  2667  001754                     l1488:
  2668  001754  0E00               	movlw	0
  2669  001756                     L11:
  2670  001756  6E1E               	movwf	char_2_int@int1,c
  2671                           
  2672                           ;RealTimeClockAns.c: 47: }
  2673  001758  D020               	goto	l123
  2674  00175A                     l1490:
  2675  00175A  501D               	movf	char_2_int@char1,w,c
  2676                           
  2677                           ; Switch size 1, requested type "space"
  2678                           ; Number of cases is 10, Range of values is 48 to 57
  2679                           ; switch strategies available:
  2680                           ; Name         Instructions Cycles
  2681                           ; simple_byte           31    16 (average)
  2682                           ;	Chosen strategy is simple_byte
  2683  00175C  0A30               	xorlw	48	; case 48
  2684  00175E  B4D8               	btfsc	status,2,c
  2685  001760  D7F9               	goto	l1488
  2686  001762  0A01               	xorlw	1	; case 49
  2687  001764  B4D8               	btfsc	status,2,c
  2688  001766  D7E4               	goto	l1470
  2689  001768  0A03               	xorlw	3	; case 50
  2690  00176A  B4D8               	btfsc	status,2,c
  2691  00176C  D7E3               	goto	l1472
  2692  00176E  0A01               	xorlw	1	; case 51
  2693  001770  B4D8               	btfsc	status,2,c
  2694  001772  D7E2               	goto	l1474
  2695  001774  0A07               	xorlw	7	; case 52
  2696  001776  B4D8               	btfsc	status,2,c
  2697  001778  D7E1               	goto	l1476
  2698  00177A  0A01               	xorlw	1	; case 53
  2699  00177C  B4D8               	btfsc	status,2,c
  2700  00177E  D7E0               	goto	l1478
  2701  001780  0A03               	xorlw	3	; case 54
  2702  001782  B4D8               	btfsc	status,2,c
  2703  001784  D7DF               	goto	l1480
  2704  001786  0A01               	xorlw	1	; case 55
  2705  001788  B4D8               	btfsc	status,2,c
  2706  00178A  D7DE               	goto	l1482
  2707  00178C  0A0F               	xorlw	15	; case 56
  2708  00178E  B4D8               	btfsc	status,2,c
  2709  001790  D7DD               	goto	l1484
  2710  001792  0A01               	xorlw	1	; case 57
  2711  001794  B4D8               	btfsc	status,2,c
  2712  001796  D7DC               	goto	l1486
  2713  001798  D7DD               	goto	l1488
  2714  00179A                     l123:
  2715                           
  2716                           ;RealTimeClockAns.c: 48: return(int1);
  2717  00179A  501E               	movf	char_2_int@int1,w,c
  2718  00179C  0012               	return		;funcret
  2719  00179E                     __end_of_char_2_int:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           intcon	equ	0xFF2
  2728                           intcon2	equ	0xFF1
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postdec1	equ	0xFE5
  2732                           plusw1	equ	0xFE3
  2733                           fsr1l	equ	0xFE1
  2734                           indf2	equ	0xFDF
  2735                           postinc2	equ	0xFDE
  2736                           plusw2	equ	0xFDB
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _ISR_Timer0_Int *****************
  2742 ;; Defined at:
  2743 ;;		line 51 in file "RealTimeClockAns.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  second10        1   27[COMRAM] unsigned char 
  2748 ;;  minute10        1   26[COMRAM] unsigned char 
  2749 ;;  hour10          1   25[COMRAM] unsigned char 
  2750 ;;  second1         1   24[COMRAM] unsigned char 
  2751 ;;  minute1         1   23[COMRAM] unsigned char 
  2752 ;;  hour1           1   22[COMRAM] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;		None               void
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2764 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2765 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:       20 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    2
  2769 ;; This function calls:
  2770 ;;		___awdiv
  2771 ;;		_int_2_char
  2772 ;;		i2_lcd_write_cmd
  2773 ;;		i2_lcd_write_data
  2774 ;; This function is called by:
  2775 ;;		Interrupt level 2
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	intcode
  2780  001008                     __pintcode:
  2781                           	opt stack 0
  2782  001008                     _ISR_Timer0_Int:
  2783                           	opt stack 25
  2784                           
  2785                           ;incstack = 0
  2786  001008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2787  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2788  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2789  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2790                           pclatu	equ	0xFFB
  2791                           pclath	equ	0xFFA
  2792                           tblptru	equ	0xFF8
  2793                           tblptrh	equ	0xFF7
  2794                           tblptrl	equ	0xFF6
  2795                           tablat	equ	0xFF5
  2796                           prodh	equ	0xFF4
  2797                           prodl	equ	0xFF3
  2798                           intcon	equ	0xFF2
  2799                           intcon2	equ	0xFF1
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           postdec1	equ	0xFE5
  2803                           plusw1	equ	0xFE3
  2804                           fsr1l	equ	0xFE1
  2805                           indf2	equ	0xFDF
  2806                           postinc2	equ	0xFDE
  2807                           plusw2	equ	0xFDB
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812                           	psect	intcode_body
  2813  00102E                     __pintcode_body:
  2814                           	opt stack 25
  2815  00102E                     int_func:
  2816                           	opt stack 25
  2817  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2818  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2819  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2820  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2821  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2822  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2823  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2824  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2825  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2826  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2827  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2828  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2829  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2830                           
  2831                           ;RealTimeClockAns.c: 53: unsigned char hour10, hour1, minute10, minute1, second10, secon
      +                          d1;
  2832                           ;RealTimeClockAns.c: 54: if (INTCONbits.TMR0IF == 1)
  2833  001060  A4F2               	btfss	intcon,2,c	;volatile
  2834  001062  D089               	goto	i2l141
  2835                           
  2836                           ;RealTimeClockAns.c: 55: {
  2837                           ;RealTimeClockAns.c: 56: TMR0H = 0x48;
  2838  001064  0E48               	movlw	72
  2839  001066  6ED7               	movwf	4055,c	;volatile
  2840                           
  2841                           ;RealTimeClockAns.c: 57: TMR0L = 0xE5;
  2842  001068  0EE5               	movlw	229
  2843  00106A  6ED6               	movwf	4054,c	;volatile
  2844                           
  2845                           ;RealTimeClockAns.c: 59: second = second + 1;
  2846  00106C  283E               	incf	_second,w,c
  2847  00106E  6E3E               	movwf	_second,c
  2848                           
  2849                           ;RealTimeClockAns.c: 60: if ( second > 59 )
  2850  001070  0E3B               	movlw	59
  2851  001072  643E               	cpfsgt	_second,c
  2852  001074  D010               	goto	i2l1832
  2853                           
  2854                           ;RealTimeClockAns.c: 61: {
  2855                           ;RealTimeClockAns.c: 62: second = 0;
  2856  001076  0E00               	movlw	0
  2857  001078  6E3E               	movwf	_second,c
  2858                           
  2859                           ;RealTimeClockAns.c: 63: minute = minute + 1;
  2860  00107A  283C               	incf	_minute,w,c
  2861  00107C  6E3C               	movwf	_minute,c
  2862                           
  2863                           ;RealTimeClockAns.c: 64: if ( minute > 59 )
  2864  00107E  0E3B               	movlw	59
  2865  001080  643C               	cpfsgt	_minute,c
  2866  001082  D009               	goto	i2l1832
  2867                           
  2868                           ;RealTimeClockAns.c: 65: {
  2869                           ;RealTimeClockAns.c: 66: minute = 0;
  2870  001084  0E00               	movlw	0
  2871  001086  6E3C               	movwf	_minute,c
  2872                           
  2873                           ;RealTimeClockAns.c: 67: hour = hour + 1;
  2874  001088  283A               	incf	_hour,w,c
  2875  00108A  6E3A               	movwf	_hour,c
  2876                           
  2877                           ;RealTimeClockAns.c: 68: if ( hour > 23 )
  2878  00108C  0E17               	movlw	23
  2879  00108E  643A               	cpfsgt	_hour,c
  2880  001090  D002               	goto	i2l1832
  2881                           
  2882                           ;RealTimeClockAns.c: 69: hour = 0;
  2883  001092  0E00               	movlw	0
  2884  001094  6E3A               	movwf	_hour,c
  2885  001096                     i2l1832:
  2886                           
  2887                           ;RealTimeClockAns.c: 70: }
  2888                           ;RealTimeClockAns.c: 71: }
  2889                           ;RealTimeClockAns.c: 73: hour10 = hour / 10;
  2890  001096  C03A  F001         	movff	_hour,___awdiv@dividend
  2891  00109A  6A02               	clrf	___awdiv@dividend+1,c
  2892  00109C  0E00               	movlw	0
  2893  00109E  6E04               	movwf	___awdiv@divisor+1,c
  2894  0010A0  0E0A               	movlw	10
  2895  0010A2  6E03               	movwf	___awdiv@divisor,c
  2896  0010A4  ECE0  F00A         	call	___awdiv	;wreg free
  2897  0010A8  5001               	movf	?___awdiv,w,c
  2898  0010AA  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  2899                           
  2900                           ;RealTimeClockAns.c: 74: hour1 = hour - hour10 * 10;
  2901  0010AC  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2902  0010AE  0D0A               	mullw	10
  2903  0010B0  50F3               	movf	prodl,w,c
  2904  0010B2  0800               	sublw	0
  2905  0010B4  243A               	addwf	_hour,w,c
  2906  0010B6  6E17               	movwf	ISR_Timer0_Int@hour1,c
  2907                           
  2908                           ;RealTimeClockAns.c: 76: minute10 = minute / 10;
  2909  0010B8  C03C  F001         	movff	_minute,___awdiv@dividend
  2910  0010BC  6A02               	clrf	___awdiv@dividend+1,c
  2911  0010BE  0E00               	movlw	0
  2912  0010C0  6E04               	movwf	___awdiv@divisor+1,c
  2913  0010C2  0E0A               	movlw	10
  2914  0010C4  6E03               	movwf	___awdiv@divisor,c
  2915  0010C6  ECE0  F00A         	call	___awdiv	;wreg free
  2916  0010CA  5001               	movf	?___awdiv,w,c
  2917  0010CC  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  2918                           
  2919                           ;RealTimeClockAns.c: 77: minute1 = minute - minute10 * 10;
  2920  0010CE  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2921  0010D0  0D0A               	mullw	10
  2922  0010D2  50F3               	movf	prodl,w,c
  2923  0010D4  0800               	sublw	0
  2924  0010D6  243C               	addwf	_minute,w,c
  2925  0010D8  6E18               	movwf	ISR_Timer0_Int@minute1,c
  2926                           
  2927                           ;RealTimeClockAns.c: 79: second10 = second / 10;
  2928  0010DA  C03E  F001         	movff	_second,___awdiv@dividend
  2929  0010DE  6A02               	clrf	___awdiv@dividend+1,c
  2930  0010E0  0E00               	movlw	0
  2931  0010E2  6E04               	movwf	___awdiv@divisor+1,c
  2932  0010E4  0E0A               	movlw	10
  2933  0010E6  6E03               	movwf	___awdiv@divisor,c
  2934  0010E8  ECE0  F00A         	call	___awdiv	;wreg free
  2935  0010EC  5001               	movf	?___awdiv,w,c
  2936  0010EE  6E1C               	movwf	ISR_Timer0_Int@second10,c
  2937                           
  2938                           ;RealTimeClockAns.c: 80: second1 = second - second10 * 10;
  2939  0010F0  501C               	movf	ISR_Timer0_Int@second10,w,c
  2940  0010F2  0D0A               	mullw	10
  2941  0010F4  50F3               	movf	prodl,w,c
  2942  0010F6  0800               	sublw	0
  2943  0010F8  243E               	addwf	_second,w,c
  2944  0010FA  6E19               	movwf	ISR_Timer0_Int@second1,c
  2945                           
  2946                           ;RealTimeClockAns.c: 82: lcd_write_cmd(0x80);
  2947  0010FC  0E80               	movlw	128
  2948  0010FE  EC07  F00C         	call	i2_lcd_write_cmd
  2949                           
  2950                           ;RealTimeClockAns.c: 83: lcd_write_data('t');
  2951  001102  0E74               	movlw	116
  2952  001104  EC96  F00A         	call	i2_lcd_write_data
  2953                           
  2954                           ;RealTimeClockAns.c: 84: lcd_write_data('i');
  2955  001108  0E69               	movlw	105
  2956  00110A  EC96  F00A         	call	i2_lcd_write_data
  2957                           
  2958                           ;RealTimeClockAns.c: 85: lcd_write_data('m');
  2959  00110E  0E6D               	movlw	109
  2960  001110  EC96  F00A         	call	i2_lcd_write_data
  2961                           
  2962                           ;RealTimeClockAns.c: 86: lcd_write_data('e');
  2963  001114  0E65               	movlw	101
  2964  001116  EC96  F00A         	call	i2_lcd_write_data
  2965                           
  2966                           ;RealTimeClockAns.c: 87: lcd_write_data(' ');
  2967  00111A  0E20               	movlw	32
  2968  00111C  EC96  F00A         	call	i2_lcd_write_data
  2969                           
  2970                           ;RealTimeClockAns.c: 88: lcd_write_data('=');
  2971  001120  0E3D               	movlw	61
  2972  001122  EC96  F00A         	call	i2_lcd_write_data
  2973                           
  2974                           ;RealTimeClockAns.c: 89: lcd_write_data(' ');
  2975  001126  0E20               	movlw	32
  2976  001128  EC96  F00A         	call	i2_lcd_write_data
  2977                           
  2978                           ;RealTimeClockAns.c: 90: lcd_write_data(int_2_char (hour10));
  2979  00112C  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2980  00112E  EC22  F00B         	call	_int_2_char
  2981  001132  EC96  F00A         	call	i2_lcd_write_data
  2982                           
  2983                           ;RealTimeClockAns.c: 91: lcd_write_data(int_2_char (hour1));
  2984  001136  5017               	movf	ISR_Timer0_Int@hour1,w,c
  2985  001138  EC22  F00B         	call	_int_2_char
  2986  00113C  EC96  F00A         	call	i2_lcd_write_data
  2987                           
  2988                           ;RealTimeClockAns.c: 92: lcd_write_data(':');
  2989  001140  0E3A               	movlw	58
  2990  001142  EC96  F00A         	call	i2_lcd_write_data
  2991                           
  2992                           ;RealTimeClockAns.c: 93: lcd_write_data(int_2_char (minute10));
  2993  001146  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2994  001148  EC22  F00B         	call	_int_2_char
  2995  00114C  EC96  F00A         	call	i2_lcd_write_data
  2996                           
  2997                           ;RealTimeClockAns.c: 94: lcd_write_data(int_2_char (minute1));
  2998  001150  5018               	movf	ISR_Timer0_Int@minute1,w,c
  2999  001152  EC22  F00B         	call	_int_2_char
  3000  001156  EC96  F00A         	call	i2_lcd_write_data
  3001                           
  3002                           ;RealTimeClockAns.c: 95: lcd_write_data(':');
  3003  00115A  0E3A               	movlw	58
  3004  00115C  EC96  F00A         	call	i2_lcd_write_data
  3005                           
  3006                           ;RealTimeClockAns.c: 96: lcd_write_data(int_2_char (second10));
  3007  001160  501C               	movf	ISR_Timer0_Int@second10,w,c
  3008  001162  EC22  F00B         	call	_int_2_char
  3009  001166  EC96  F00A         	call	i2_lcd_write_data
  3010                           
  3011                           ;RealTimeClockAns.c: 97: lcd_write_data(int_2_char (second1));
  3012  00116A  5019               	movf	ISR_Timer0_Int@second1,w,c
  3013  00116C  EC22  F00B         	call	_int_2_char
  3014  001170  EC96  F00A         	call	i2_lcd_write_data
  3015                           
  3016                           ;RealTimeClockAns.c: 99: INTCONbits.TMR0IF = 0;
  3017  001174  94F2               	bcf	intcon,2,c	;volatile
  3018  001176                     i2l141:
  3019  001176  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3020  00117A  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3021  00117E  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3022  001182  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3023  001186  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3024  00118A  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3025  00118E  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3026  001192  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3027  001196  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3028  00119A  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3029  00119E  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3030  0011A2  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3031  0011A6  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3032  0011AA  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3033  0011AE  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3034  0011B0  0011               	retfie		f
  3035  0011B2                     __end_of_ISR_Timer0_Int:
  3036                           	opt stack 0
  3037                           pclatu	equ	0xFFB
  3038                           pclath	equ	0xFFA
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           intcon	equ	0xFF2
  3046                           intcon2	equ	0xFF1
  3047                           postinc0	equ	0xFEE
  3048                           fsr0h	equ	0xFEA
  3049                           fsr0l	equ	0xFE9
  3050                           wreg	equ	0xFE8
  3051                           postdec1	equ	0xFE5
  3052                           plusw1	equ	0xFE3
  3053                           fsr1h	equ	0xFE2
  3054                           fsr1l	equ	0xFE1
  3055                           indf2	equ	0xFDF
  3056                           postinc2	equ	0xFDE
  3057                           plusw2	equ	0xFDB
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function i2_lcd_write_data *****************
  3063 ;; Defined at:
  3064 ;;		line 43 in file "lcd_utilities.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  data            1    wreg     unsigned char 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  data            1    2[COMRAM] unsigned char 
  3069 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;		None               void
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0
  3080 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3081 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3082 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        3 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    1
  3086 ;; This function calls:
  3087 ;;		i2_lcd_strobe
  3088 ;; This function is called by:
  3089 ;;		_ISR_Timer0_Int
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text16
  3094  00152C                     __ptext16:
  3095                           	opt stack 0
  3096  00152C                     i2_lcd_write_data:
  3097                           	opt stack 25
  3098                           
  3099                           ;incstack = 0
  3100                           ;i2lcd_write_data@data stored from wreg
  3101  00152C  6E03               	movwf	i2lcd_write_data@data,c
  3102                           
  3103                           ;lcd_utilities.c: 45: char temp1;
  3104                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3105  00152E  8C83               	bsf	3971,6,c	;volatile
  3106                           
  3107                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3108  001530  0E3F               	movlw	63
  3109  001532  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3110  001534  0E55               	movlw	85
  3111  001536                     i2u127_47:
  3112  001536  2EE8               	decfsz	wreg,f,c
  3113  001538  D7FE               	goto	i2u127_47
  3114  00153A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3115  00153C  D7FC               	goto	i2u127_47
  3116  00153E  F000               	nop	
  3117                           
  3118                           ;lcd_utilities.c: 50: temp1 = data;
  3119  001540  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3120                           
  3121                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3122  001544  3804               	swapf	i2lcd_write_data@temp1,w,c
  3123  001546  0B0F               	andlw	15
  3124  001548  6E04               	movwf	i2lcd_write_data@temp1,c
  3125                           
  3126                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3127  00154A  5004               	movf	i2lcd_write_data@temp1,w,c
  3128  00154C  0B0F               	andlw	15
  3129  00154E  6E83               	movwf	3971,c	;volatile
  3130                           
  3131                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3132  001550  0E7D               	movlw	125
  3133  001552  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3134  001554  0EAC               	movlw	172
  3135  001556                     i2u128_47:
  3136  001556  2EE8               	decfsz	wreg,f,c
  3137  001558  D7FE               	goto	i2u128_47
  3138  00155A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3139  00155C  D7FC               	goto	i2u128_47
  3140                           
  3141                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3142  00155E  8C83               	bsf	3971,6,c	;volatile
  3143                           
  3144                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3145  001560  0E7D               	movlw	125
  3146  001562  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3147  001564  0EAC               	movlw	172
  3148  001566                     i2u129_47:
  3149  001566  2EE8               	decfsz	wreg,f,c
  3150  001568  D7FE               	goto	i2u129_47
  3151  00156A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3152  00156C  D7FC               	goto	i2u129_47
  3153                           
  3154                           ;lcd_utilities.c: 57: lcd_strobe();
  3155  00156E  EC62  F00D         	call	i2_lcd_strobe	;wreg free
  3156                           
  3157                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3158  001572  0E7D               	movlw	125
  3159  001574  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3160  001576  0EAC               	movlw	172
  3161  001578                     i2u130_47:
  3162  001578  2EE8               	decfsz	wreg,f,c
  3163  00157A  D7FE               	goto	i2u130_47
  3164  00157C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3165  00157E  D7FC               	goto	i2u130_47
  3166                           
  3167                           ;lcd_utilities.c: 60: temp1 = data;
  3168  001580  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3169                           
  3170                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3171  001584  5004               	movf	i2lcd_write_data@temp1,w,c
  3172  001586  0B0F               	andlw	15
  3173  001588  6E83               	movwf	3971,c	;volatile
  3174                           
  3175                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3176  00158A  0E7D               	movlw	125
  3177  00158C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3178  00158E  0EAC               	movlw	172
  3179  001590                     i2u131_47:
  3180  001590  2EE8               	decfsz	wreg,f,c
  3181  001592  D7FE               	goto	i2u131_47
  3182  001594  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3183  001596  D7FC               	goto	i2u131_47
  3184                           
  3185                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3186  001598  8C83               	bsf	3971,6,c	;volatile
  3187                           
  3188                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3189  00159A  0E9C               	movlw	156
  3190  00159C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3191  00159E  0ED7               	movlw	215
  3192  0015A0                     i2u132_47:
  3193  0015A0  2EE8               	decfsz	wreg,f,c
  3194  0015A2  D7FE               	goto	i2u132_47
  3195  0015A4  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3196  0015A6  D7FC               	goto	i2u132_47
  3197  0015A8  F000               	nop	
  3198                           
  3199                           ;lcd_utilities.c: 66: lcd_strobe();
  3200  0015AA  EC62  F00D         	call	i2_lcd_strobe	;wreg free
  3201                           
  3202                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3203  0015AE  0E9C               	movlw	156
  3204  0015B0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3205  0015B2  0ED7               	movlw	215
  3206  0015B4                     i2u133_47:
  3207  0015B4  2EE8               	decfsz	wreg,f,c
  3208  0015B6  D7FE               	goto	i2u133_47
  3209  0015B8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3210  0015BA  D7FC               	goto	i2u133_47
  3211  0015BC  F000               	nop	
  3212  0015BE  0012               	return		;funcret
  3213  0015C0                     __end_ofi2_lcd_write_data:
  3214                           	opt stack 0
  3215                           pclatu	equ	0xFFB
  3216                           pclath	equ	0xFFA
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           prodh	equ	0xFF4
  3222                           prodl	equ	0xFF3
  3223                           intcon	equ	0xFF2
  3224                           intcon2	equ	0xFF1
  3225                           postinc0	equ	0xFEE
  3226                           fsr0h	equ	0xFEA
  3227                           fsr0l	equ	0xFE9
  3228                           wreg	equ	0xFE8
  3229                           postdec1	equ	0xFE5
  3230                           plusw1	equ	0xFE3
  3231                           fsr1h	equ	0xFE2
  3232                           fsr1l	equ	0xFE1
  3233                           indf2	equ	0xFDF
  3234                           postinc2	equ	0xFDE
  3235                           plusw2	equ	0xFDB
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function i2_lcd_write_cmd *****************
  3241 ;; Defined at:
  3242 ;;		line 18 in file "lcd_utilities.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  cmd             1    wreg     unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  cmd             1    2[COMRAM] unsigned char 
  3247 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;		None               void
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0
  3258 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3259 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3260 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3261 ;;Total ram usage:        3 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    1
  3264 ;; This function calls:
  3265 ;;		i2_lcd_strobe
  3266 ;; This function is called by:
  3267 ;;		_ISR_Timer0_Int
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text17
  3272  00180E                     __ptext17:
  3273                           	opt stack 0
  3274  00180E                     i2_lcd_write_cmd:
  3275                           	opt stack 25
  3276                           
  3277                           ;incstack = 0
  3278                           ;i2lcd_write_cmd@cmd stored from wreg
  3279  00180E  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3280                           
  3281                           ;lcd_utilities.c: 20: unsigned char temp2;
  3282                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3283  001810  9C83               	bcf	3971,6,c	;volatile
  3284                           
  3285                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3286  001812  0E3F               	movlw	63
  3287  001814  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3288  001816  0E55               	movlw	85
  3289  001818                     i2u134_47:
  3290  001818  2EE8               	decfsz	wreg,f,c
  3291  00181A  D7FE               	goto	i2u134_47
  3292  00181C  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3293  00181E  D7FC               	goto	i2u134_47
  3294  001820  F000               	nop	
  3295                           
  3296                           ;lcd_utilities.c: 23: temp2 = cmd;
  3297  001822  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3298                           
  3299                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3300  001826  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3301  001828  0B0F               	andlw	15
  3302  00182A  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3303                           
  3304                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3305  00182C  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3306  00182E  0B0F               	andlw	15
  3307  001830  6E83               	movwf	3971,c	;volatile
  3308                           
  3309                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3310  001832  0E7D               	movlw	125
  3311  001834  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3312  001836  0EAC               	movlw	172
  3313  001838                     i2u135_47:
  3314  001838  2EE8               	decfsz	wreg,f,c
  3315  00183A  D7FE               	goto	i2u135_47
  3316  00183C  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3317  00183E  D7FC               	goto	i2u135_47
  3318                           
  3319                           ;lcd_utilities.c: 28: lcd_strobe();
  3320  001840  EC62  F00D         	call	i2_lcd_strobe	;wreg free
  3321                           
  3322                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3323  001844  0E7D               	movlw	125
  3324  001846  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3325  001848  0EAC               	movlw	172
  3326  00184A                     i2u136_47:
  3327  00184A  2EE8               	decfsz	wreg,f,c
  3328  00184C  D7FE               	goto	i2u136_47
  3329  00184E  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3330  001850  D7FC               	goto	i2u136_47
  3331                           
  3332                           ;lcd_utilities.c: 32: temp2 = cmd;
  3333  001852  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3334                           
  3335                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3336  001856  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3337  001858  0B0F               	andlw	15
  3338  00185A  6E83               	movwf	3971,c	;volatile
  3339                           
  3340                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3341  00185C  0E7D               	movlw	125
  3342  00185E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3343  001860  0EAC               	movlw	172
  3344  001862                     i2u137_47:
  3345  001862  2EE8               	decfsz	wreg,f,c
  3346  001864  D7FE               	goto	i2u137_47
  3347  001866  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3348  001868  D7FC               	goto	i2u137_47
  3349                           
  3350                           ;lcd_utilities.c: 36: lcd_strobe();
  3351  00186A  EC62  F00D         	call	i2_lcd_strobe	;wreg free
  3352                           
  3353                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3354  00186E  0E7D               	movlw	125
  3355  001870  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3356  001872  0EAC               	movlw	172
  3357  001874                     i2u138_47:
  3358  001874  2EE8               	decfsz	wreg,f,c
  3359  001876  D7FE               	goto	i2u138_47
  3360  001878  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3361  00187A  D7FC               	goto	i2u138_47
  3362  00187C  0012               	return		;funcret
  3363  00187E                     __end_ofi2_lcd_write_cmd:
  3364                           	opt stack 0
  3365                           pclatu	equ	0xFFB
  3366                           pclath	equ	0xFFA
  3367                           tblptru	equ	0xFF8
  3368                           tblptrh	equ	0xFF7
  3369                           tblptrl	equ	0xFF6
  3370                           tablat	equ	0xFF5
  3371                           prodh	equ	0xFF4
  3372                           prodl	equ	0xFF3
  3373                           intcon	equ	0xFF2
  3374                           intcon2	equ	0xFF1
  3375                           postinc0	equ	0xFEE
  3376                           fsr0h	equ	0xFEA
  3377                           fsr0l	equ	0xFE9
  3378                           wreg	equ	0xFE8
  3379                           postdec1	equ	0xFE5
  3380                           plusw1	equ	0xFE3
  3381                           fsr1h	equ	0xFE2
  3382                           fsr1l	equ	0xFE1
  3383                           indf2	equ	0xFDF
  3384                           postinc2	equ	0xFDE
  3385                           plusw2	equ	0xFDB
  3386                           fsr2h	equ	0xFDA
  3387                           fsr2l	equ	0xFD9
  3388                           status	equ	0xFD8
  3389                           
  3390 ;; *************** function i2_lcd_strobe *****************
  3391 ;; Defined at:
  3392 ;;		line 73 in file "lcd_utilities.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;		None               void
  3399 ;; Registers used:
  3400 ;;		wreg
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3406 ;;      Params:         0       0       0       0       0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3408 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3409 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3410 ;;Total ram usage:        1 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		i2_lcd_write_cmd
  3416 ;;		i2_lcd_write_data
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text18
  3421  001AC4                     __ptext18:
  3422                           	opt stack 0
  3423  001AC4                     i2_lcd_strobe:
  3424                           	opt stack 25
  3425                           
  3426                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3427                           
  3428                           ;incstack = 0
  3429  001AC4  8883               	bsf	3971,4,c	;volatile
  3430                           
  3431                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3432  001AC6  0E7D               	movlw	125
  3433  001AC8  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3434  001ACA  0EAC               	movlw	172
  3435  001ACC                     i2u139_47:
  3436  001ACC  2EE8               	decfsz	wreg,f,c
  3437  001ACE  D7FE               	goto	i2u139_47
  3438  001AD0  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3439  001AD2  D7FC               	goto	i2u139_47
  3440                           
  3441                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3442  001AD4  9883               	bcf	3971,4,c	;volatile
  3443                           
  3444                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3445  001AD6  0E7D               	movlw	125
  3446  001AD8  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3447  001ADA  0EAC               	movlw	172
  3448  001ADC                     i2u140_47:
  3449  001ADC  2EE8               	decfsz	wreg,f,c
  3450  001ADE  D7FE               	goto	i2u140_47
  3451  001AE0  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3452  001AE2  D7FC               	goto	i2u140_47
  3453  001AE4  0012               	return		;funcret
  3454  001AE6                     __end_ofi2_lcd_strobe:
  3455                           	opt stack 0
  3456                           pclatu	equ	0xFFB
  3457                           pclath	equ	0xFFA
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           prodh	equ	0xFF4
  3463                           prodl	equ	0xFF3
  3464                           intcon	equ	0xFF2
  3465                           intcon2	equ	0xFF1
  3466                           postinc0	equ	0xFEE
  3467                           fsr0h	equ	0xFEA
  3468                           fsr0l	equ	0xFE9
  3469                           wreg	equ	0xFE8
  3470                           postdec1	equ	0xFE5
  3471                           plusw1	equ	0xFE3
  3472                           fsr1h	equ	0xFE2
  3473                           fsr1l	equ	0xFE1
  3474                           indf2	equ	0xFDF
  3475                           postinc2	equ	0xFDE
  3476                           plusw2	equ	0xFDB
  3477                           fsr2h	equ	0xFDA
  3478                           fsr2l	equ	0xFD9
  3479                           status	equ	0xFD8
  3480                           
  3481 ;; *************** function _int_2_char *****************
  3482 ;; Defined at:
  3483 ;;		line 11 in file "RealTimeClockAns.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  int1            1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  int1            1    0[COMRAM] unsigned char 
  3488 ;;  char1           1    1[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      unsigned char 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0
  3499 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3501 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3502 ;;Total ram usage:        2 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_ISR_Timer0_Int
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text19
  3512  001644                     __ptext19:
  3513                           	opt stack 0
  3514  001644                     _int_2_char:
  3515                           	opt stack 26
  3516                           
  3517                           ;incstack = 0
  3518                           ;int_2_char@int1 stored from wreg
  3519  001644  6E01               	movwf	int_2_char@int1,c
  3520                           
  3521                           ;RealTimeClockAns.c: 13: char char1;
  3522                           ;RealTimeClockAns.c: 14: switch (int1)
  3523  001646  D017               	goto	i2l952
  3524  001648                     i2l930:
  3525  001648  0E30               	movlw	48
  3526  00164A  D013               	goto	L21
  3527  00164C                     i2l932:
  3528  00164C  0E31               	movlw	49
  3529  00164E  D011               	goto	L21
  3530  001650                     i2l934:
  3531  001650  0E32               	movlw	50
  3532  001652  D00F               	goto	L21
  3533  001654                     i2l936:
  3534  001654  0E33               	movlw	51
  3535  001656  D00D               	goto	L21
  3536  001658                     i2l938:
  3537  001658  0E34               	movlw	52
  3538  00165A  D00B               	goto	L21
  3539  00165C                     i2l940:
  3540  00165C  0E35               	movlw	53
  3541  00165E  D009               	goto	L21
  3542  001660                     i2l942:
  3543  001660  0E36               	movlw	54
  3544  001662  D007               	goto	L21
  3545  001664                     i2l944:
  3546  001664  0E37               	movlw	55
  3547  001666  D005               	goto	L21
  3548  001668                     i2l946:
  3549  001668  0E38               	movlw	56
  3550  00166A  D003               	goto	L21
  3551  00166C                     i2l948:
  3552  00166C  0E39               	movlw	57
  3553  00166E  D001               	goto	L21
  3554  001670                     i2l950:
  3555  001670  0E3F               	movlw	63
  3556  001672                     L21:
  3557  001672  6E02               	movwf	int_2_char@char1,c
  3558                           
  3559                           ;RealTimeClockAns.c: 27: }
  3560  001674  D020               	goto	i2l107
  3561  001676                     i2l952:
  3562  001676  5001               	movf	int_2_char@int1,w,c
  3563                           
  3564                           ; Switch size 1, requested type "space"
  3565                           ; Number of cases is 10, Range of values is 0 to 9
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte           31    16 (average)
  3569                           ;	Chosen strategy is simple_byte
  3570  001678  0A00               	xorlw	0	; case 0
  3571  00167A  B4D8               	btfsc	status,2,c
  3572  00167C  D7E5               	goto	i2l930
  3573  00167E  0A01               	xorlw	1	; case 1
  3574  001680  B4D8               	btfsc	status,2,c
  3575  001682  D7E4               	goto	i2l932
  3576  001684  0A03               	xorlw	3	; case 2
  3577  001686  B4D8               	btfsc	status,2,c
  3578  001688  D7E3               	goto	i2l934
  3579  00168A  0A01               	xorlw	1	; case 3
  3580  00168C  B4D8               	btfsc	status,2,c
  3581  00168E  D7E2               	goto	i2l936
  3582  001690  0A07               	xorlw	7	; case 4
  3583  001692  B4D8               	btfsc	status,2,c
  3584  001694  D7E1               	goto	i2l938
  3585  001696  0A01               	xorlw	1	; case 5
  3586  001698  B4D8               	btfsc	status,2,c
  3587  00169A  D7E0               	goto	i2l940
  3588  00169C  0A03               	xorlw	3	; case 6
  3589  00169E  B4D8               	btfsc	status,2,c
  3590  0016A0  D7DF               	goto	i2l942
  3591  0016A2  0A01               	xorlw	1	; case 7
  3592  0016A4  B4D8               	btfsc	status,2,c
  3593  0016A6  D7DE               	goto	i2l944
  3594  0016A8  0A0F               	xorlw	15	; case 8
  3595  0016AA  B4D8               	btfsc	status,2,c
  3596  0016AC  D7DD               	goto	i2l946
  3597  0016AE  0A01               	xorlw	1	; case 9
  3598  0016B0  B4D8               	btfsc	status,2,c
  3599  0016B2  D7DC               	goto	i2l948
  3600  0016B4  D7DD               	goto	i2l950
  3601  0016B6                     i2l107:
  3602                           
  3603                           ;RealTimeClockAns.c: 28: return(char1);
  3604  0016B6  5002               	movf	int_2_char@char1,w,c
  3605  0016B8  0012               	return		;funcret
  3606  0016BA                     __end_of_int_2_char:
  3607                           	opt stack 0
  3608                           pclatu	equ	0xFFB
  3609                           pclath	equ	0xFFA
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           intcon	equ	0xFF2
  3617                           intcon2	equ	0xFF1
  3618                           postinc0	equ	0xFEE
  3619                           fsr0h	equ	0xFEA
  3620                           fsr0l	equ	0xFE9
  3621                           wreg	equ	0xFE8
  3622                           postdec1	equ	0xFE5
  3623                           plusw1	equ	0xFE3
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           indf2	equ	0xFDF
  3627                           postinc2	equ	0xFDE
  3628                           plusw2	equ	0xFDB
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function ___awdiv *****************
  3634 ;; Defined at:
  3635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  dividend        2    0[COMRAM] int 
  3638 ;;  divisor         2    2[COMRAM] int 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  quotient        2    6[COMRAM] int 
  3641 ;;  sign            1    5[COMRAM] unsigned char 
  3642 ;;  counter         1    4[COMRAM] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2    0[COMRAM] int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3652 ;;      Params:         4       0       0       0       0       0       0       0       0
  3653 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3655 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3656 ;;Total ram usage:        8 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_ISR_Timer0_Int
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text20
  3666  0015C0                     __ptext20:
  3667                           	opt stack 0
  3668  0015C0                     ___awdiv:
  3669                           	opt stack 26
  3670                           
  3671                           ;incstack = 0
  3672  0015C0  0E00               	movlw	0
  3673  0015C2  6E06               	movwf	___awdiv@sign,c
  3674  0015C4  AE04               	btfss	___awdiv@divisor+1,7,c
  3675  0015C6  D006               	goto	i2l1714
  3676  0015C8  6C03               	negf	___awdiv@divisor,c
  3677  0015CA  1E04               	comf	___awdiv@divisor+1,f,c
  3678  0015CC  B0D8               	btfsc	status,0,c
  3679  0015CE  2A04               	incf	___awdiv@divisor+1,f,c
  3680  0015D0  0E01               	movlw	1
  3681  0015D2  6E06               	movwf	___awdiv@sign,c
  3682  0015D4                     i2l1714:
  3683  0015D4  AE02               	btfss	___awdiv@dividend+1,7,c
  3684  0015D6  D006               	goto	i2l1720
  3685  0015D8  6C01               	negf	___awdiv@dividend,c
  3686  0015DA  1E02               	comf	___awdiv@dividend+1,f,c
  3687  0015DC  B0D8               	btfsc	status,0,c
  3688  0015DE  2A02               	incf	___awdiv@dividend+1,f,c
  3689  0015E0  0E01               	movlw	1
  3690  0015E2  1A06               	xorwf	___awdiv@sign,f,c
  3691  0015E4                     i2l1720:
  3692  0015E4  0E00               	movlw	0
  3693  0015E6  6E08               	movwf	___awdiv@quotient+1,c
  3694  0015E8  0E00               	movlw	0
  3695  0015EA  6E07               	movwf	___awdiv@quotient,c
  3696  0015EC  5003               	movf	___awdiv@divisor,w,c
  3697  0015EE  1004               	iorwf	___awdiv@divisor+1,w,c
  3698  0015F0  B4D8               	btfsc	status,2,c
  3699  0015F2  D01C               	goto	i2l1742
  3700  0015F4  0E01               	movlw	1
  3701  0015F6  6E05               	movwf	___awdiv@counter,c
  3702  0015F8  D004               	goto	i2l1728
  3703  0015FA                     i2l1726:
  3704  0015FA  90D8               	bcf	status,0,c
  3705  0015FC  3603               	rlcf	___awdiv@divisor,f,c
  3706  0015FE  3604               	rlcf	___awdiv@divisor+1,f,c
  3707  001600  2A05               	incf	___awdiv@counter,f,c
  3708  001602                     i2l1728:
  3709  001602  AE04               	btfss	___awdiv@divisor+1,7,c
  3710  001604  D7FA               	goto	i2l1726
  3711  001606                     i2l1730:
  3712  001606  90D8               	bcf	status,0,c
  3713  001608  3607               	rlcf	___awdiv@quotient,f,c
  3714  00160A  3608               	rlcf	___awdiv@quotient+1,f,c
  3715  00160C  5003               	movf	___awdiv@divisor,w,c
  3716  00160E  5C01               	subwf	___awdiv@dividend,w,c
  3717  001610  5004               	movf	___awdiv@divisor+1,w,c
  3718  001612  5802               	subwfb	___awdiv@dividend+1,w,c
  3719  001614  A0D8               	btfss	status,0,c
  3720  001616  D005               	goto	i2l1738
  3721  001618  5003               	movf	___awdiv@divisor,w,c
  3722  00161A  5E01               	subwf	___awdiv@dividend,f,c
  3723  00161C  5004               	movf	___awdiv@divisor+1,w,c
  3724  00161E  5A02               	subwfb	___awdiv@dividend+1,f,c
  3725  001620  8007               	bsf	___awdiv@quotient,0,c
  3726  001622                     i2l1738:
  3727  001622  90D8               	bcf	status,0,c
  3728  001624  3204               	rrcf	___awdiv@divisor+1,f,c
  3729  001626  3203               	rrcf	___awdiv@divisor,f,c
  3730  001628  2E05               	decfsz	___awdiv@counter,f,c
  3731  00162A  D7ED               	goto	i2l1730
  3732  00162C                     i2l1742:
  3733  00162C  5006               	movf	___awdiv@sign,w,c
  3734  00162E  B4D8               	btfsc	status,2,c
  3735  001630  D004               	goto	i2l1746
  3736  001632  6C07               	negf	___awdiv@quotient,c
  3737  001634  1E08               	comf	___awdiv@quotient+1,f,c
  3738  001636  B0D8               	btfsc	status,0,c
  3739  001638  2A08               	incf	___awdiv@quotient+1,f,c
  3740  00163A                     i2l1746:
  3741  00163A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3742  00163E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3743  001642  0012               	return	
  3744  001644                     __end_of___awdiv:
  3745                           	opt stack 0
  3746                           pclatu	equ	0xFFB
  3747                           pclath	equ	0xFFA
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           prodh	equ	0xFF4
  3753                           prodl	equ	0xFF3
  3754                           intcon	equ	0xFF2
  3755                           intcon2	equ	0xFF1
  3756                           postinc0	equ	0xFEE
  3757                           fsr0h	equ	0xFEA
  3758                           fsr0l	equ	0xFE9
  3759                           wreg	equ	0xFE8
  3760                           postdec1	equ	0xFE5
  3761                           plusw1	equ	0xFE3
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           indf2	equ	0xFDF
  3765                           postinc2	equ	0xFDE
  3766                           plusw2	equ	0xFDB
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           pclatu	equ	0xFFB
  3771                           pclath	equ	0xFFA
  3772                           tblptru	equ	0xFF8
  3773                           tblptrh	equ	0xFF7
  3774                           tblptrl	equ	0xFF6
  3775                           tablat	equ	0xFF5
  3776                           prodh	equ	0xFF4
  3777                           prodl	equ	0xFF3
  3778                           intcon	equ	0xFF2
  3779                           intcon2	equ	0xFF1
  3780                           postinc0	equ	0xFEE
  3781                           fsr0h	equ	0xFEA
  3782                           fsr0l	equ	0xFE9
  3783                           wreg	equ	0xFE8
  3784                           postdec1	equ	0xFE5
  3785                           plusw1	equ	0xFE3
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           plusw2	equ	0xFDB
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795                           	psect	rparam
  3796  0000                     pclatu	equ	0xFFB
  3797                           pclath	equ	0xFFA
  3798                           tblptru	equ	0xFF8
  3799                           tblptrh	equ	0xFF7
  3800                           tblptrl	equ	0xFF6
  3801                           tablat	equ	0xFF5
  3802                           prodh	equ	0xFF4
  3803                           prodl	equ	0xFF3
  3804                           intcon	equ	0xFF2
  3805                           intcon2	equ	0xFF1
  3806                           postinc0	equ	0xFEE
  3807                           fsr0h	equ	0xFEA
  3808                           fsr0l	equ	0xFE9
  3809                           wreg	equ	0xFE8
  3810                           postdec1	equ	0xFE5
  3811                           plusw1	equ	0xFE3
  3812                           fsr1h	equ	0xFE2
  3813                           fsr1l	equ	0xFE1
  3814                           indf2	equ	0xFDF
  3815                           postinc2	equ	0xFDE
  3816                           plusw2	equ	0xFDB
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           status	equ	0xFD8
  3820                           
  3821                           	psect	temp
  3822  00003F                     btemp:
  3823                           	opt stack 0
  3824  00003F                     	ds	1
  3825  0000                     int$flags	set	btemp
  3826                           pclatu	equ	0xFFB
  3827                           pclath	equ	0xFFA
  3828                           tblptru	equ	0xFF8
  3829                           tblptrh	equ	0xFF7
  3830                           tblptrl	equ	0xFF6
  3831                           tablat	equ	0xFF5
  3832                           prodh	equ	0xFF4
  3833                           prodl	equ	0xFF3
  3834                           intcon	equ	0xFF2
  3835                           intcon2	equ	0xFF1
  3836                           postinc0	equ	0xFEE
  3837                           fsr0h	equ	0xFEA
  3838                           fsr0l	equ	0xFE9
  3839                           wreg	equ	0xFE8
  3840                           postdec1	equ	0xFE5
  3841                           plusw1	equ	0xFE3
  3842                           fsr1h	equ	0xFE2
  3843                           fsr1l	equ	0xFE1
  3844                           indf2	equ	0xFDF
  3845                           postinc2	equ	0xFDE
  3846                           plusw2	equ	0xFDB
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        104
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      62
    BANK0           160     62     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _turnServoMotor->_delay_ms
    _lcd_init->_lcd_write_cmd
    _displayAlarmOn->_lcd_write_cmd
    _displayAlarmOn->_lcd_write_data
    _displayAlarmOff->_lcd_write_cmd
    _displayAlarmOff->_lcd_write_data
    _activateBuzzer->_delay_ms
    _SetupTime->_delay_ms
    _SetupAlarmTime->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTime->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6257
                                             35 COMRAM     3     3      0
                     _SetupAlarmTime
                          _SetupTime
       _SetupTimerInterruptRegisters
                     _activateBuzzer
                    _displayAlarmOff
                     _displayAlarmOn
                           _lcd_init
                     _turnServoMotor
 ---------------------------------------------------------------------------------
 (1) _turnServoMotor                                       1     1      0     765
                                             33 COMRAM     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _displayAlarmOn                                      22    22      0     498
                                              0 BANK0     22    22      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _displayAlarmOff                                     21    21      0     498
                                              0 BANK0     21    21      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _activateBuzzer                                       0     0      0     627
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           43    43      0    1848
                                             19 BANK0     43    43      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTime                                      38    38      0    1650
                                             19 BANK0     38    38      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     627
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _activateBuzzer
     _delay_ms
   _displayAlarmOff
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _displayAlarmOn
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _turnServoMotor
     _delay_ms

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      3E       1       66.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1      20        0.0%
DATA                 0      0      D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Aug 17 09:02:24 2022

                                    l9 1A48         ??_SetupTimerInterruptRegisters 001D  
               displayAlarmOn@msgindex 00CA                                     l12 1A54  
                                   l21 1A94                           ___awdiv@sign 0006  
               displayAlarmOff@outchar 00C8                __size_of_ISR_Timer0_Int 01AA  
              displayAlarmOff@msgindex 00C9               __size_ofi2_lcd_write_cmd 0070  
                                  l123 179A                                    l175 13FA  
                                  l177 1432                                    l179 146A  
                                  l187 189A                                    u921 11BC  
                                  u870 1A3E                                    u951 12F6  
                                  u981 199E                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4444 101B  
                                 l2000 16E0                                   l2004 16F6  
                                 l2014 11D0                                   l2112 19BC  
                                 l1402 1A80                                   l2026 1200  
                                 l2018 11DA                                   l2130 1A0A  
                                 l2108 19B2                                   l2126 1A00  
                                 l2080 133A                                   l2072 1314  
                                 l2162 18C8                                   l2068 130A  
                                 l2156 18BA                                   l1470 1730  
                                 l1480 1744                                   l1472 1734  
                                 l2168 18D6                                   l1482 1748  
                                 l1474 1738                                   l1490 175A  
                                 l1484 174C                                   l1476 173C  
                                 l1486 1750                                   l1478 1740  
                                 l1670 142A                                   l1654 13F2  
                                 l1488 1754                                   l1682 1452  
                                 l1666 141A                                   l1686 1462  
                                 l1698 148A                                   l1996 16D0  
                                 u1011 19EC                                   u1107 16E6  
                                 u1117 1720                                   u1207 17C8  
                                 u1127 14A2                                   u1217 17DA  
                                 u1137 14C2                                   u1227 17F2  
                                 u1147 14D2                                   u1237 1804  
                                 u1157 14E4                                   u1247 1AAA  
                                 u1167 14FC                                   u1257 1ABA  
                                 u1177 150C                                   u1267 1A86  
                                 u1187 1520                                   u1197 17A8  
               __end_of_lcd_write_data 152C                                   _main 187E  
                                 _hour 003A                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 003F                                   pclat 000FFA  
                      ?_displayAlarmOn 0001                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 15C0  
               SetupAlarmTime@minute10 00EA                       ??_turnServoMotor 0022  
                         ___param_bank 000010                 SetupAlarmTime@msgindex 00EC  
                                ?_main 0001                        __end_of___awdiv 1644  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l107 16B6  
                                i2l141 1176                                  i2l930 1648  
                                i2l940 165C                                  i2l932 164C  
                                i2l950 1670                                  i2l942 1660  
                                i2l934 1650                                  i2l944 1664  
                                i2l936 1654                                  i2l952 1676  
                                i2l946 1668                                  i2l938 1658  
                                i2l948 166C                        ___awdiv@counter 0005  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 003B                                  tablat 000FF5  
                     ?_displayAlarmOff 0001                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00B5                         _activateBuzzer 1B02  
                      __initialization 18E6                           __end_of_main 18E6  
                               ??_main 0024                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1AC4  
                               i2l1720 15E4                                 i2l1730 1606  
                               i2l1714 15D4                                 i2l1726 15FA  
                               i2l1742 162C                                 i2l1728 1602  
                               i2l1832 1096                                 i2l1746 163A  
                               i2l1738 1622                        ??_lcd_write_cmd 001E  
              __size_of_SetupAlarmTime 00F4                 __end_of_activateBuzzer 1B16  
                     __end_of_delay_ms 1AA2                       __end_of_lcd_init 172C  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1A30  
                     ___awdiv@quotient 0007                                 _minute 003C  
                               _second 003E                           __pdataCOMRAM 0027  
                   __size_of_SetupTime 013A                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                    turnServoMotor@count 0022  
                           __accesstop 0060                __end_of__initialization 1930  
                        getkey@keycode 00C7                        ?_activateBuzzer 0001  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11B2  
                       __pcstackCOMRAM 0001                           __pidataBANK0 193E  
                           _char_2_int 172C                       ??_displayAlarmOn 0021  
                    __end_of_SetupTime 12EC                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1AA2                              ?_lcd_init 0001  
                   lcd_write_data@data 001F                     lcd_write_cmd@temp2 0020  
                       _SetupAlarmTime 12EC                             _int_2_char 1644  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                ___awdiv 15C0  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 180E                                __pcinit 18E6  
                   main@displayUpdated 0026                                __ramtop 0800  
                              __ptext0 187E                                __ptext1 13E0  
                              __ptext2 16BA                                __ptext3 1994  
                              __ptext4 19E2                                __ptext5 1B02  
                              __ptext6 1AE6                                __ptext7 11B2  
                              __ptext8 12EC                                __ptext9 1498  
                            _T0CONbits 000FD5                         SetupTime@F4482 0060  
                              _minuteA 003D                             ??_delay_ms 001F  
                          ?_char_2_int 0001                             ??_lcd_init 0021  
                       __pintcode_body 102E                 __end_of_SetupAlarmTime 13E0  
                 end_of_initialization 1930                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         main@servoMotor 0024  
                       SetupTime@ctemp 00F2                         SetupTime@hour1 00EC  
                        __Lmediumconst 0000                                int_func 102E  
                displayAlarmOn@Message 00B5               __size_of_displayAlarmOff 004E  
                              postdec1 000FE5                                postinc0 000FEE  
                              postinc2 000FDE                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
              __size_of_turnServoMotor 00B8                  SetupAlarmTime@Message 00C8  
                            _TRISAbits 000F92                            ?_lcd_strobe 0001  
                           main@Buzzer 0025                       ??_activateBuzzer 0022  
                displayAlarmOn@outchar 00C9                        ?_SetupAlarmTime 0001  
                          ?_int_2_char 0001                  __end_of_lcd_write_cmd 180E  
              __end_ofi2_lcd_write_cmd 187E                  SetupAlarmTime@minute1 00EB  
                  __size_of_char_2_int 0072                  SetupAlarmTime@outchar 00E7  
                        __pidataCOMRAM 1B16                         __end_of_getkey 1A6E  
                  start_initialization 18E6                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                              _SetupTime 11B2  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      ??_displayAlarmOff 0021  
                    SetupTime@minute10 00ED                      SetupTime@second10 00EF  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00F1  
                          __pbssCOMRAM 003A              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 00B5                      __size_of_delay_ms 0034  
                    __size_of_lcd_init 0072                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?___awdiv 0001  
                           ?_SetupTime 0001                         _turnServoMotor 13E0  
                          __smallconst 101A                           ??_char_2_int 001D  
                        ?i2_lcd_strobe 0001                              delay_ms@i 001D  
                            delay_ms@j 0020                    ISR_Timer0_Int@hour1 0017  
                 displayAlarmOff@F4503 0027                               i2u130_47 1578  
                             i2u131_47 1590                               i2u140_47 1ADC  
                             i2u132_47 15A0                               i2u133_47 15B4  
                             i2u134_47 1818                               i2u135_47 1838  
                             i2u127_47 1536                               i2u136_47 184A  
                             i2u128_47 1556                               i2u137_47 1862  
                             i2u129_47 1566                               i2u138_47 1874  
                             i2u139_47 1ACC                __size_of_displayAlarmOn 004E  
                             _RCONbits 000FD0                     __end_of_char_2_int 179E  
               __end_of_turnServoMotor 1498                              lcd_init@i 0022  
                     ??_SetupAlarmTime 0022                   SetupAlarmTime@hour10 00E8  
                  lcd_write_data@temp1 0020                         ??i2_lcd_strobe 0001  
                         ??_lcd_strobe 001D                       SetupTime@Message 00C8  
                            copy_data0 1904                              copy_data1 1924  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1B02  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1AE6  
              __size_of_lcd_write_data 0094                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                          ??_SetupTime 0022                       SetupTime@minute1 00EE  
                     SetupTime@second1 00F0                       __size_of___awdiv 0084  
                      ?_turnServoMotor 0001                     __end_of_lcd_strobe 1AC4  
                     SetupTime@outchar 00EA                     __end_of_int_2_char 16BA  
                     i2_lcd_write_data 152C                               _delay_ms 1A6E  
                             __ptext10 179E                               __ptext11 1AA2  
                             __ptext20 15C0                               __ptext12 1A30  
                             __ptext13 1A6E                               __ptext14 172C  
                             __ptext16 152C                               __ptext17 180E  
                             __ptext18 1AC4                               __ptext19 1644  
                             _lcd_init 16BA                    displayAlarmOn@F4498 00A1  
                        __size_of_main 0068                    SetupAlarmTime@F4492 0082  
        ?_SetupTimerInterruptRegisters 0001                        _displayAlarmOff 19E2  
                             int$flags 003F                    SetupAlarmTime@ctemp 00ED  
                  SetupAlarmTime@hour1 00E9                             _INTCONbits 000FF2  
               __size_of_lcd_write_cmd 0070                  ISR_Timer0_Int@minute1 0018  
                ISR_Timer0_Int@second1 0019                         int_2_char@int1 0001  
                      SetupTime@hour10 00EB                               intlevel2 0000  
                  __end_ofgetkey@F4444 102D                         _displayAlarmOn 1994  
              __size_of_activateBuzzer 0014                   __end_ofi2_lcd_strobe 1AE6  
               displayAlarmOff@Message 00B5                __end_of_displayAlarmOff 1A30  
               __end_of_displayAlarmOn 19E2                         _lcd_write_data 1498  
                        _lcd_write_cmd 179E  
